{"version":3,"sources":["logIn/Login.js","actions/authActions.js","signUp/Signup.js","protectedRoute/ProtectedRoute.js","actions/testActions.js","dashboard/TestCard.js","dashboard/ResultCard.js","dashboard/Dashboard.js","Teacher/Dashboard/Classes.js","actions/classesActions.js","Teacher/Dashboard/AssignedTests.js","Teacher/Dashboard/Dashboard.js","attemptTest/SearchBox.js","attemptTest/TestList.js","attemptTest/SelectTest.js","actions/selectActions.js","attemptTest/AttemptTest.js","Roles/roles.js","navbar/LeftMenu.js","navbar/index.js","result/SearchBox.js","result/TestList.js","result/SelectTest.js","result/ResultWrapper.js","TestInstructions/TestInstruction.js","result/ShowResult.js","actions/attemptTestActions.js","testPreview/Counter.js","testPreview/LeftSide.js","testPreview/RightSide.js","testPreview/Footer.js","testPreview/Object_Detection.js","testPreview/TestPage.js","testPreview/HandleLiveTest.js","testPreview/TestPreview.js","testPreview/TestPreviewWrapper.js","profile/Profile.js","Teacher/CreateTest/Rules.js","Teacher/CreateTest/Questions.js","Teacher/CreateTest/RenderData.js","actions/TeacherActions.js","Teacher/CreateTest/CreateTest.js","Teacher/AssigenedTest/SearchBox.js","Teacher/AssigenedTest/TestList.js","Teacher/AssigenedTest/SelectTest.js","Teacher/AssigenedTest/AssignedTestsWrapper.js","Teacher/TestStatus/StudentStatus.js","Teacher/TestStatus/LogsTable.js","Teacher/TestStatus/TestStatus.js","App/App.js","serviceWorker.js","reducers/authReducer.js","reducers/testReducer.js","reducers/selectReducer.js","reducers/attemptedTestReducer.js","reducers/classesReducer.js","reducers/teacherReducer.js","reducers/index.js","store/index.js","index.js"],"names":["connect","state","isAuthenticated","auth","isLoading","dispatch","sendLoginRequest","values","type","requestOptions","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","fetch","then","response","json","data","user","profileID","token","setItem","payload","catch","error","loginUser","props","history","useHistory","Typography","Title","useEffect","push","justify","align","className","xs","sm","md","lg","name","initialValues","remember","onFinish","onFinishFailed","errorInfo","console","log","Item","rules","required","message","placeholder","Password","style","textAlign","fontWeight","marginBottom","to","minWidth","loading","htmlType","accountCreated","sendSignUpRequest","errMess","signUpUser","sendUserAccountCreated","useState","showSelect","setShowSelect","Option","Select","notification","open","description","duration","defaultValue","onSelect","select","optionData","value","disabled","ProtectedRoute","Component","this","component","userInfo","pathname","React","testSubmitted","testID","fetchAttemptTests","a","tests","obj","fetchTests","isLoadingTest","test","classID","studentClassName","trimLength","length","slice","reverse","map","index","key","testName","Array","fill","item","i","Avatar","active","size","shape","Input","isLoadingAttemptedTest","attemptedTest","backgroundColor","gutter","xl","classesList","classesData","classes","fetchClasses","filteredDupicates","filter","v","findIndex","t","receiveClasses","individualClass","fetchTeacherTests","Dashboard","Search","SearchBox","searchTerm","setSearchTerm","handleListData","toLowerCase","onSearch","onChange","e","target","enterButton","TestList","setTests","searchTests","setSearchTests","searching","setSearching","selectRef","selectedData","handleSelectTest","classList","remove","currentTarget","add","includes","onClick","minutes","color","questions","handleSelectedTest","selectedTest","testData","Roles","useBreakpoint","Grid","signOut","setisAuthenticated","location","useLocation","role","homeRoute","testRoute","resultRoute","signOutRoute","profileRoute","createTestRoute","assignedTestRoute","display","mode","removeItem","Navbar","current","visible","showDrawer","setState","onClose","email","title","placement","closable","replace","selectedTestData","testRules","confirm","Modal","outOfMarks","category","attempted","_id","rule","icon","ExclamationCircleOutlined","content","onOk","onCancel","selectedTestResultData","marks","rightAnswers","submitMinutes","totalMarks","totalAttempt","date","testInfo","correct","wrong","submitDate","Date","toLocaleDateString","percent","Math","floor","status","width","height","chartType","loader","options","pieHole","rootProps","updateTimeSpentByStudent","completed","totalTime","updatingAttemptedMinutes","parseInt","subtractTime","attemptedTime","abs","testStatus","time","Counter","totalMinutes","parse","remainingTime","rM","count","hideDay","onEnd","handleCounter","RightSide","handleClearResponse","newSelectedAnswers","selectedAnswers","blankClearAttempt","undefined","questionAnswered","changeActivatedQueInChild","changeActivatedQue","questionsData","activateQue","changeParentActivatedQue","submitTest","dataToSubmit","userAnswers","answers","firstName","lastName","unanswered","element","changeIndex","questionIndex","apply","onRef","radioStyle","lineHeight","question","Group","option","CloseOutlined","postedData","submitBy","Footer","handleNext","handleFooterButtons","handleSubmitTest","Detection","videoRef","createRef","canvasRef","detectFrame","video","model","detect","predictions","renderPredictions","requestAnimationFrame","ctx","getContext","clearRect","canvas","font","textBaseline","forEach","prediction","x","bbox","y","strokeStyle","lineWidth","strokeRect","fillStyle","textWidth","measureText","class","textHeight","fillRect","fillText","faces","swal","FaceNotVisible","MobilePhone","ProhibitedObject","MultipleFacesVisible","toString","navigator","mediaDevices","getUserMedia","webCamPromise","audio","facingMode","stream","window","srcObject","Promise","resolve","reject","onloadedmetadata","modelPromise","cocoSsd","all","autoPlay","playsInline","muted","ref","TestPage","TestID","setMinutes","seconds","setSeconds","tab_change","setTabChange","key_press","setKeyPress","mobile_phone_found","setMobilePhoneFound","prohibited_object_found","setProhibitedObjectFound","face_not_visible","setFaceNotVisible","multiple_faces_visible","setMultipleFacesVisible","checkedPrevLogs","setCheckedPrevLogs","handleVisibilityChange","document","hidden","handleKeyPress","event","altKey","ctrlKey","addEventListener","preventDefault","axios","get","key_press_count","tab_change_count","mobile_found","multiple_faces_found","err","removeEventListener","myInterval","setInterval","post","student_email","exam_code","clearInterval","id","fontSize","variant","HandleLiveTest","changeActivatedQueFromFooter","footerClick","child","triggerFlag","flag","submitTestOnCounterEnd","buttonClicked","updatedUserAnswers","totalAnswered","totalPending","answered","changed","handleQuestionClick","totalScore","totalFlagged","counterEnd","updateTimer","TestPreview","intervalId","timer","clickChild","loadData","intervalID","bind","tM","click","userAttemptedTime","isSelected","Object","keys","Profile","submitForm","isVerified","phone","section","xxl","src","margin","readonly","userisVerified","Rules","setRule","submitInput","addRule","questionDescripiton","setQuestionDescripiton","opiton1","setOption1","opiton2","setOption2","opiton3","setOption3","opiton4","setOption4","answer","setAnswer","TextArea","questionData","addQuestion","min","max","RenderData","ruleData","handleClick","clickedRule","CreateTest","sendData","teacherId","teacherID","testCreated","handleSelect","handleDeleteRule","Removeindex","handleDeleteQuestion","openNotification","testCreatedFalse","teacher","assignedTests","fetchAssignedTests","StudentStatus","student","setData","TestId","res","getProduct","toUpperCase","descendingComparator","b","orderBy","headCells","numeric","disablePadding","label","EnhancedTableToolbar","numSelected","Toolbar","sx","pl","pr","bgcolor","theme","alpha","palette","primary","main","action","activatedOpacity","flex","Tooltip","IconButton","LogsTable","setExamCode","visibility","setVisibility","error_text","setErrorText","order","selected","page","setPage","dense","rowsPerPage","setRowsPerPage","rows","setRows","setTableData","getData","curr_logs","s_no","student_name","emptyRows","Box","TextField","autoFocus","InputLabelProps","InputProps","disableUnderline","padding","borderRadius","letterSpacing","marginLeft","marginTop","Paper","mb","TableContainer","Table","aria-labelledby","TableHead","TableRow","headCell","TableCell","TableBody","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","row","company","indexOf","labelId","hover","scope","colSpan","TablePagination","rowsPerPageOptions","onPageChange","newPage","onRowsPerPageChange","selectedAssignedTestData","students","selectedTestName","selectedAssignedTestName","setCount","success","exact","path","Login","Signup","TeacherDashboard","StudentDashboard","AttemptTest","Result","IndividualResult","TestInstruction","TestPreviewWrapper","AssignedTestsWrapper","TestStatus","Boolean","hostname","match","initialState","isLoggingIn","isSigningUp","isLoggingOut","isVerifying","loginError","signupError","logoutError","sendPassResetSuccess","sendPassResetError","isFetching","fetchingError","isFetched","testSubmitError","isFetchingError","initializeTimer","isFetchError","combineReducers","verifyingError","fetchError","isfetched","allEnhancers","compose","applyMiddleware","thunk","store","createStore","reducer","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0fa5b578.chunk.js","sourcesContent":["import { Form, Input, Button } from \"antd\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Row, Col, Typography } from \"antd\";\r\nimport \"./Login.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { loginUser } from \"../actions/authActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Login(props) {\r\n  const history = useHistory();\r\n  const { Title } = Typography;\r\n  const { isLoading } = props;\r\n\r\n  const tailLayout = {\r\n    wrapperCol: {\r\n      offset: 8,\r\n      span: 16,\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.isAuthenticated) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [props]);\r\n\r\n  const submitForm = (values) => {\r\n    props.sendLoginRequest(values);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n  return (\r\n    <>\r\n      <Row justify=\"center\" align=\"middle\" className=\"hero\">\r\n        <Col xs={22} sm={22} md={6} lg={6} className=\"signin__container\">\r\n          <p className=\"sub-title\">💻 ExamIN</p>\r\n\r\n          <Form\r\n            name=\"basic\"\r\n            initialValues={{\r\n              remember: true,\r\n            }}\r\n            onFinish={submitForm}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <Form.Item\r\n              name=\"email\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your email!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"Email\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your password!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password placeholder=\"Password\" />\r\n            </Form.Item>\r\n            <div\r\n              className=\"link\"\r\n              style={{\r\n                textAlign: \"center\",\r\n                fontWeight: 500,\r\n                marginBottom: \"15px\",\r\n              }}\r\n            >\r\n              <Link to=\"/signup\">New here? Create your account.</Link>\r\n            </div>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                className=\"sign__in\"\r\n                style={{ minWidth: \"44px\" }}\r\n                loading={isLoading}\r\n                htmlType=\"submit\"\r\n              >\r\n                {!isLoading ? \"Sign In\" : \"Logging In\"}\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    isLoading: state.auth.isLoading,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendLoginRequest: (values) => dispatch(loginUser(values)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","export const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\r\n\r\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\r\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\r\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\r\n\r\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const LOGOUT_FAILURE = \"LOGOUT_FAILURE\";\r\n\r\nexport const VERIFY_REQUEST = \"VERIFY_REQUEST\";\r\nexport const VERIFY_SUCCESS = \"VERIFY_SUCCESS\";\r\n\r\nexport const SEND_PASS_RESET = \"SEND_PASS_RESET\";\r\nexport const SEND_PASS_RESET_ERROR = \"SEND_PASS_RESET_ERROR\";\r\nexport const SEND_PASS_RESET_SUCCESS = \"SEND_PASS_RESET_SUCCESS\";\r\n\r\nexport const USER_ACCOUNT_CREATED = \"USER_ACCOUNT_CREATED\";\r\n\r\nconst requestLogin = () => {\r\n  return {\r\n    type: LOGIN_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveLogin = (user, profileID) => {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    user,\r\n    profileID,\r\n  };\r\n};\r\n\r\nconst loginError = () => {\r\n  return {\r\n    type: LOGIN_FAILURE,\r\n  };\r\n};\r\n\r\nconst requestsignup = () => {\r\n  return {\r\n    type: SIGN_UP_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveSignup = (user) => {\r\n  return {\r\n    type: SIGN_UP_SUCCESS,\r\n    user,\r\n  };\r\n};\r\n\r\nconst signupError = (errMess) => {\r\n  return {\r\n    type: SIGN_UP_FAILURE,\r\n    errMess,\r\n  };\r\n};\r\n\r\nconst requestLogout = () => {\r\n  return {\r\n    type: LOGOUT_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveLogout = () => {\r\n  return {\r\n    type: LOGOUT_SUCCESS,\r\n  };\r\n};\r\n\r\nconst logoutError = () => {\r\n  return {\r\n    type: LOGOUT_FAILURE,\r\n  };\r\n};\r\n\r\nconst verifyRequest = () => {\r\n  return {\r\n    type: VERIFY_REQUEST,\r\n  };\r\n};\r\n\r\nconst verifySuccess = () => {\r\n  return {\r\n    type: VERIFY_SUCCESS,\r\n  };\r\n};\r\n\r\nconst sendingPassReset = () => {\r\n  return {\r\n    type: SEND_PASS_RESET,\r\n  };\r\n};\r\n\r\nconst sendPassResetError = (errMess) => {\r\n  return {\r\n    type: SEND_PASS_RESET_ERROR,\r\n    errMess,\r\n  };\r\n};\r\n\r\nconst sendPassResetSuccess = () => {\r\n  return {\r\n    type: SEND_PASS_RESET_SUCCESS,\r\n  };\r\n};\r\n\r\nconst userAccountCreated = () => {\r\n  return {\r\n    type: USER_ACCOUNT_CREATED,\r\n  };\r\n};\r\n\r\nexport const loginUser = (values) => (dispatch) => {\r\n  dispatch(requestLogin());\r\n\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n\r\n    body: JSON.stringify(values),\r\n  };\r\n\r\n  fetch(\"/user/login\", requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data.token) {\r\n        // console.log(\"email: \" + data.payload.email);\r\n        localStorage.setItem(\"token\", `Bearer ${data.token}`);\r\n        localStorage.setItem(\"userProfile\", JSON.stringify(data.payload.user));\r\n        localStorage.setItem(\"profileID\", data.payload.profileID);\r\n        dispatch(receiveLogin(data.payload.user, data.payload.profileID));\r\n        // history.push(\"/studentHome\");\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      //Do something with the error if you want!\r\n      dispatch(loginError());\r\n    });\r\n};\r\n\r\nexport const signUpUser = (values) => (dispatch) => {\r\n  dispatch(requestsignup());\r\n\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(values),\r\n  };\r\n  //console.log(\"Success:\", values);\r\n  fetch(\"/user/signup\", requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data.token) {\r\n        // localStorage.setItem(\"token\", `Bearer ${data.token}`);\r\n        // localStorage.setItem('userProfile', JSON.stringify(data.payload.user));\r\n        // localStorage.setItem('profileID', data.payload.profileID);\r\n        dispatch(receiveSignup(data.user));\r\n        //history.push(\"/studentHome\");\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      //Do something with the error if you want!\r\n      console.log(error);\r\n      dispatch(signupError());\r\n    });\r\n};\r\n\r\nexport const accountCreated = () => (dispatch) => {\r\n  dispatch(userAccountCreated());\r\n};\r\n\r\n// export const signupUser = (displayName, email, password, password2) => dispatch => {\r\n//   dispatch(requestsignup());\r\n//   //verifying password and name.\r\n//   if(displayName.length < 3){\r\n//     return dispatch(signupError(\"Name must have atleast 3 characters.\"));\r\n//   }\r\n\r\n//   if(displayName.length > 50){\r\n//     return dispatch(signupError(\"Name must have atmost 50 characters.\"));\r\n//   }\r\n\r\n//   if(!/^[a-zA-Z ]*$/.test(displayName)){\r\n//     return dispatch(signupError(\"Name must contain only alphabets.\"));\r\n//   }\r\n\r\n//   if(password !== password2){\r\n//     return dispatch(signupError(\"Passwords do not match\"));\r\n//   }\r\n\r\n// };\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n  dispatch(requestLogout());\r\n  dispatch(receiveLogout());\r\n};\r\n\r\n// export const verifyAuth = () => dispatch => {\r\n//   dispatch(verifyRequest());\r\n//   myFirebase.auth().onAuthStateChanged(user => {\r\n//     if (user !== null) {\r\n//       dispatch(receiveLogin(user));\r\n//     }\r\n//     dispatch(verifySuccess());\r\n//   });\r\n// };\r\n\r\n// export const sendPasswordResetLink = (email) => dispatch => {\r\n//   dispatch(sendingPassReset());\r\n//   myFirebase.auth().sendPasswordResetEmail(email)\r\n//   .then(()=>{\r\n//     dispatch(sendPassResetSuccess());\r\n//   })\r\n//   .catch(error=>{\r\n//     console.error(error);\r\n//     switch(error.code){\r\n//       case 'auth/invalid-email':\r\n//         dispatch(sendPassResetError(\"Invalid email address.\"));\r\n//         break;\r\n//       case 'auth/user-not-found':\r\n//         dispatch(sendPassResetError(\"User not found with the given email address.\"));\r\n//         break;\r\n//       default:\r\n//         dispatch(sendPassResetError(\"Failed to send password reset email.\"));\r\n//     }\r\n//   })\r\n// }\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Typography,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Select,\r\n  notification,\r\n} from \"antd\";\r\nimport \"./Signup.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { signUpUser, accountCreated } from \"../actions/authActions\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Signup(props) {\r\n  const [showSelect, setShowSelect] = useState(false);\r\n  const history = useHistory();\r\n  const { Option } = Select;\r\n  const { isLoading } = props;\r\n\r\n  const submitForm = (values) => {\r\n    props.sendSignUpRequest(values);\r\n    console.log(values);\r\n  };\r\n\r\n  const openNotification = () => {\r\n    const args = {\r\n      message: \"Account Created\",\r\n      description:\r\n        \"Congratulations, Now you are part of our family. Please login to continue.\",\r\n      duration: 3,\r\n    };\r\n    notification.open(args);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n  useEffect(() => {\r\n    if (props.accountCreated) {\r\n      openNotification();\r\n      props.sendUserAccountCreated();\r\n    }\r\n  }, [props]);\r\n\r\n  const handleSelect = (select, optionData) => {\r\n    console.log(optionData);\r\n    if (optionData.value === \"teacher\") {\r\n      setShowSelect(true);\r\n    } else {\r\n      setShowSelect(false);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Row justify=\"center\" align=\"middle\" className=\"hero\">\r\n        <Col xs={22} sm={22} md={8} lg={8} className=\"signup__container\">\r\n          <p className=\"sub-title__signup\">💻 ExamIN</p>\r\n          <Form\r\n            name=\"basic\"\r\n            initialValues={{\r\n              remember: true,\r\n            }}\r\n            onFinish={submitForm}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <div className=\"element__wrapper\">\r\n              <Form.Item\r\n                name=\"firstName\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your First Name!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"First Name\" />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"lastName\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your Last Name!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Last Name\" />\r\n              </Form.Item>\r\n            </div>\r\n            <Form.Item\r\n              name=\"email\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your email!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"abcd@gmail.com\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your password!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password placeholder=\"Password\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"phone\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your Phone Number!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input type=\"tel\" placeholder=\"7275XXXXXX\" />\r\n            </Form.Item>\r\n\r\n            <div className=\"element__wrapper\">\r\n              <Form.Item\r\n                name=\"role\"\r\n                rules={[\r\n                  {\r\n                    message: \"Please input your role!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select defaultValue=\"Role\" onSelect={handleSelect}>\r\n                  <Option value=\"student\">Student</Option>\r\n                  <Option value=\"teacher\">Teacher</Option>\r\n                </Select>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"section\"\r\n                rules={[\r\n                  {\r\n                    message: \"Please input your section!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select defaultValue=\"Section\" disabled={showSelect}>\r\n                  <Option value=\"A\">A</Option>\r\n                  <Option value=\"B\">B</Option>\r\n                  <Option value=\"C\">C</Option>\r\n                  <Option value=\"D\">D</Option>\r\n                </Select>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"className\"\r\n                rules={[\r\n                  {\r\n                    message: \"Please input your email!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select defaultValue=\"Class\" disabled={showSelect}>\r\n                  <Option value=\"IX\">IX</Option>\r\n                  <Option value=\"XI\">XI</Option>\r\n                  <Option value=\"XII\">XII</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </div>\r\n            <div\r\n              className=\"link\"\r\n              style={{\r\n                textAlign: \"center\",\r\n                fontWeight: 500,\r\n                marginBottom: \"15px\",\r\n              }}\r\n            >\r\n              <Link to=\"/sigin\">Already have account? Signin</Link>\r\n            </div>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                className=\"sign__up\"\r\n                htmlType=\"submit\"\r\n                loading={isLoading}\r\n              >\r\n                {!isLoading ? \"Sign Up\" : \"Creating Account\"}\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    isLoading: state.auth.isLoading,\r\n    accountCreated: state.auth.accountCreated,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendSignUpRequest: (values) => dispatch(signUpUser(values)),\r\n    sendUserAccountCreated: () => dispatch(accountCreated()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProtectedRoute extends React.Component {\r\n  render() {\r\n    const Component = this.props.component;\r\n    return this.props.isAuthenticated ? (\r\n      <Component userInfo={this.props.userInfo} />\r\n    ) : (\r\n      <Redirect to={{ pathname: \"/signin\" }} />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    userInfo: state.auth.user,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, null)(ProtectedRoute);\r\n","import { logoutUser } from \"./authActions\";\r\nexport const FETCH_TEST_REQUEST = \"FETCH_TEST_REQUEST\";\r\nexport const FETCH_TEST_SUCCESS = \"FETCH_TEST_SUCCESS\";\r\nexport const FETCH_ATTEMPT_TEST_SUCCESS = \"FETCH_ATTEMPT_TEST_SUCCESS\";\r\nexport const FETCH_TEST_FAILURE = \"FETCH_TEST_FAILURE\";\r\nexport const SUBMIT_TEST_FAILURE = \"SUBMIT_TEST_FAILURE\";\r\nexport const SUBMIT_TEST_SUCCESS = \"SUBMIT_TEST_SUCCESS\";\r\n\r\n// Teacher action types\r\nexport const FETCH_TEACHER_TEST_REQUEST = \"FETCH_TEACHER_TEST_REQUEST\";\r\nexport const FETCH_TEACHER_TEST_SUCCESS = \"FETCH_TEACHER_TEST_SUCCESS\";\r\nexport const FETCH_TEACHER_TEST_FAILURE = \"FETCH_TEACHER_TEST_FAILURE\";\r\n\r\nconst requestTests = () => {\r\n  return {\r\n    type: FETCH_TEST_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveTests = (tests) => {\r\n  return {\r\n    type: FETCH_TEST_SUCCESS,\r\n    tests,\r\n  };\r\n};\r\n\r\nconst testsError = (errorData) => {\r\n  return {\r\n    type: FETCH_TEST_FAILURE,\r\n  };\r\n};\r\nconst requestTeacherTests = () => {\r\n  return {\r\n    type: FETCH_TEACHER_TEST_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveTeacherTests = (tests) => {\r\n  return {\r\n    type: FETCH_TEACHER_TEST_SUCCESS,\r\n    tests,\r\n  };\r\n};\r\n\r\nconst testsTeacherError = () => {\r\n  return {\r\n    type: FETCH_TEACHER_TEST_FAILURE,\r\n  };\r\n};\r\nconst testSubmitError = () => {\r\n  return {\r\n    type: SUBMIT_TEST_FAILURE,\r\n  };\r\n};\r\nconst testSubmitted = (testID) => {\r\n  return {\r\n    type: SUBMIT_TEST_SUCCESS,\r\n    testID: testID,\r\n  };\r\n};\r\n\r\nconst receiveAttemptTests = (tests) => {\r\n  return {\r\n    type: FETCH_ATTEMPT_TEST_SUCCESS,\r\n    tests,\r\n  };\r\n};\r\n\r\nexport const fetchAttemptTests = (profileID) => async (dispatch) => {\r\n  dispatch(requestTests());\r\n\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n  };\r\n\r\n  await fetch(`/student/attempt-tests/${profileID}`, requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data) {\r\n        if (data?.error?.name === \"TokenExpiredError\") {\r\n          dispatch(logoutUser());\r\n        } else {\r\n          dispatch(receiveAttemptTests(data.obj));\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      //Do something with the error if you want!\r\n      console.log(error);\r\n      dispatch(testsError());\r\n    });\r\n};\r\n\r\nexport const fetchTests = (className) => async (dispatch) => {\r\n  dispatch(requestTests());\r\n\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n  };\r\n\r\n  await fetch(`/student/tests/${className}`, requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data?.error?.name === \"TokenExpiredError\") {\r\n        dispatch(logoutUser());\r\n      } else {\r\n        dispatch(receiveTests(data.obj));\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      //Do something with the error if you want!\r\n      console.log(error);\r\n    });\r\n};\r\n\r\nexport const submitTest = (data) => async (dispatch) => {\r\n  // dispatch(requestTests());\r\n  const {\r\n    testID,\r\n    correct,\r\n    unanswered,\r\n    totalMarks,\r\n    profileID,\r\n    testName,\r\n    firstName,\r\n    lastName,\r\n    wrong,\r\n  } = data;\r\n  const testData = JSON.parse(localStorage.getItem(testID));\r\n  let submitMinutes = testData.rM;\r\n  const submitBy = [\r\n    {\r\n      correct,\r\n      unanswered,\r\n      totalMarks,\r\n      profileID,\r\n      testName,\r\n      firstName,\r\n      lastName,\r\n      wrong,\r\n      submitMinutes,\r\n    },\r\n  ];\r\n\r\n  const postedData = {\r\n    submitBy,\r\n    testID,\r\n    testName,\r\n  };\r\n\r\n  const requestOptions = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n    body: JSON.stringify(postedData),\r\n  };\r\n\r\n  await fetch(`/student/submit-test/${testID}`, requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data) {\r\n        if (data?.error?.name === \"TokenExpiredError\") {\r\n          dispatch(logoutUser());\r\n        } else {\r\n          \r\n          dispatch(testSubmitted(testID));\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      //Do something with the error if you want!\r\n      console.log(error);\r\n      dispatch(testSubmitError());\r\n    });\r\n};\r\n\r\n/* Teacher Actions*/\r\n\r\nexport const fetchTeacherTests = (profileID) => async (dispatch) => {\r\n  dispatch(requestTeacherTests());\r\n\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n  };\r\n\r\n  await fetch(`/teacher/tests/${profileID}`, requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data) {\r\n        if (data?.error?.name === \"TokenExpiredError\") {\r\n          dispatch(logoutUser());\r\n        } else {\r\n          dispatch(receiveTeacherTests(data.obj));\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      //Do something with the error if you want!\r\n      console.log(error);\r\n      dispatch(testsTeacherError());\r\n    });\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport \"./TestCard.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HiOutlineClipboardList, HiClipboardCopy } from \"react-icons/hi\";\r\nimport { fetchTests } from \"../actions/testActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Skeleton } from \"antd\";\r\n\r\nfunction TestCard(props) {\r\n  let { tests, isLoading, studentClassName, trimLength } = props;\r\n  if (tests)\r\n    tests =\r\n      tests.length > trimLength ? tests.slice(-trimLength).reverse() : tests;\r\n\r\n  useEffect(() => {\r\n    props.fetchTests(studentClassName);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"left__header red__header\">\r\n        <p className=\"left__header__text\">\r\n          {<HiOutlineClipboardList />}Today's Test\r\n        </p>\r\n      </div>\r\n      <div className=\"left__body\">\r\n        {!isLoading && tests ? (\r\n          <ul className=\"left__body__list__ul\">\r\n            {tests.map((test, index) => (\r\n              <Link to=\"/attempt-test\" key={index}>\r\n                <li className=\"left__body__test\">\r\n                  <div className=\"test__index\">\r\n                    <p className=\"index__box red__index\">{index + 1}</p>\r\n                  </div>\r\n                  <div className=\"test__name \"> {test.testName}</div>\r\n                  <div className=\"test__icon\">\r\n                    <HiClipboardCopy />\r\n                  </div>\r\n                </li>\r\n              </Link>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <div className=\"skeleton\">\r\n            {Array(trimLength)\r\n              .fill()\r\n              .map((item, i) => (\r\n                <div className=\"single-skeleton\" key={i}>\r\n                  <Skeleton.Avatar\r\n                    className=\"avatar-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                    shape=\"square\"\r\n                  />\r\n                  <Skeleton.Input\r\n                    className=\"input-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                  />\r\n                </div>\r\n              ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.tests.isLoadingTest,\r\n    tests: state.tests.test,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchTests: (classID) => dispatch(fetchTests(classID)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TestCard);\r\n","import React, { useEffect } from \"react\";\r\nimport \"./TestCard.css\";\r\nimport { HiOutlineClipboardList, HiClipboardCopy } from \"react-icons/hi\";\r\nimport { fetchAttemptTests } from \"../actions/testActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Skeleton } from \"antd\";\r\n\r\nfunction ResultCard(props) {\r\n  let { tests, isLoading, profileID, trimLength } = props;\r\n  if (tests)\r\n    tests =\r\n      tests.length > trimLength ? tests.slice(-trimLength).reverse() : tests;\r\n\r\n  useEffect(() => {\r\n    props.fetchTests(profileID);\r\n    console.log(\"fired\");\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"left__header\">\r\n        <p className=\"left__header__text\">\r\n          {<HiOutlineClipboardList />}Recently Attempted Tests\r\n        </p>\r\n      </div>\r\n      <div className=\"left__body\">\r\n        {!isLoading && tests ? (\r\n          <ul className=\"left__body__list__ul\">\r\n            {tests.map((test, index) => (\r\n              <Link to=\"/result\" key={index}>\r\n                <li className=\"left__body__test\">\r\n                  <div className=\"test__index\">\r\n                    <p\r\n                      className=\"index__box \"\r\n                      style={{ backgroundColor: \"#1e90ff\" }}\r\n                    >\r\n                      {index + 1}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"test__name\"> {test.testName}</div>\r\n                  <div className=\"test__icon\">\r\n                    <HiClipboardCopy />\r\n                  </div>\r\n                </li>\r\n              </Link>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <div className=\"skeleton\">\r\n            {Array(trimLength)\r\n              .fill()\r\n              .map((item, i) => (\r\n                <div className=\"single-skeleton\" key={i}>\r\n                  <Skeleton.Avatar\r\n                    className=\"avatar-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                    shape=\"square\"\r\n                  />\r\n                  <Skeleton.Input\r\n                    className=\"input-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                  />\r\n                </div>\r\n              ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.tests.isLoadingAttemptedTest,\r\n    tests: state.tests.attemptedTest,\r\n    profileID: state.auth.profileID,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchTests: (profileID) => dispatch(fetchAttemptTests(profileID)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultCard);\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport TestCard from \"./TestCard\";\r\nimport ResultCard from \"./ResultCard\";\r\nimport \"./Dashboard.css\";\r\n\r\nfunction Dashboard(props) {\r\n  const { studentClassName, profileID, userInfo } = props;\r\n  const trimLength = 8;\r\n\r\n  // console.log(userInfo);\r\n\r\n  return (\r\n    <>\r\n      <div className={\"container dashboard\"}>\r\n        <Row gutter={[48, 10]} justify=\"center\">\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={9} xl={9}>\r\n            <TestCard\r\n              studentClassName={studentClassName}\r\n              trimLength={trimLength}\r\n            />\r\n          </Col>\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={9} xl={9}>\r\n            <ResultCard trimLength={trimLength} />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    studentClassName: state.auth.user ? state.auth.user.className : null,\r\n    profileID: state.auth.user ? state.auth.user.profileID : null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Dashboard);\r\n","import React, { useEffect } from \"react\";\r\nimport \"./index.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HiOutlineClipboardList, HiClipboardCopy } from \"react-icons/hi\";\r\nimport { fetchClasses } from \"../../actions/classesActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Skeleton } from \"antd\";\r\n\r\nfunction Classes(props) {\r\n  let { classesList, isLoading, studentClassName, trimLength, classes } = props;\r\n  if (classesList)\r\n    classesList =\r\n      classesList.length > trimLength\r\n        ? classesList.slice(-trimLength).reverse()\r\n        : classesList;\r\n\r\n  useEffect(() => {\r\n    props.fetchClasses();\r\n  }, []);\r\n  console.log(props);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"left__header red__header\">\r\n        <p className=\"left__header__text\">\r\n          {<HiOutlineClipboardList />}Recent Registered Classes\r\n        </p>\r\n      </div>\r\n      <div className=\"left__body\">\r\n        {!isLoading && classesList ? (\r\n          <ul className=\"left__body__list__ul\">\r\n            {classesList.map((individualClass, index) => (\r\n              <Link to=\"/attempt-test\" key={index}>\r\n                <li className=\"left__body__test\">\r\n                  <div className=\"test__index\">\r\n                    <p className=\"index__box red__index\">{index + 1}</p>\r\n                  </div>\r\n                  <div className=\"test__name \">\r\n                    {\" \"}\r\n                    Class - {individualClass.className}\r\n                  </div>\r\n                  <div className=\"test__icon\">\r\n                    <HiClipboardCopy />\r\n                  </div>\r\n                </li>\r\n              </Link>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <div className=\"skeleton\">\r\n            {Array(trimLength)\r\n              .fill()\r\n              .map((item, i) => (\r\n                <div className=\"single-skeleton\" key={i}>\r\n                  <Skeleton.Avatar\r\n                    className=\"avatar-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                    shape=\"square\"\r\n                  />\r\n                  <Skeleton.Input\r\n                    className=\"input-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                  />\r\n                </div>\r\n              ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.tests.isLoadingTest,\r\n    tests: state.tests.test,\r\n    classesList: state.classesData.classes,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchClasses: () => dispatch(fetchClasses()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Classes);\r\n","import { logoutUser } from \"./authActions\";\r\nexport const FETCH_CLASSES_REQUEST = \"FETCH_CLASSES_REQUEST\";\r\nexport const FETCH_CLASSES_SUCCESS = \"FETCH_CLASSES_SUCCESS\";\r\nexport const FETCH_CLASSES_FAILURE = \"FETCH_CLASSES_FAILURE\";\r\n\r\nconst requestClasses = () => {\r\n  return {\r\n    type: FETCH_CLASSES_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveClasses = (data) => {\r\n  return {\r\n    type: FETCH_CLASSES_SUCCESS,\r\n    data,\r\n  };\r\n};\r\n\r\nconst ClassesError = () => {\r\n  return {\r\n    type: FETCH_CLASSES_FAILURE,\r\n  };\r\n};\r\n\r\nexport const fetchClasses = (values) => (dispatch) => {\r\n  dispatch(requestClasses());\r\n\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n  };\r\n  fetch(\"/teacher/classes\", requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data?.error?.name === \"TokenExpiredError\") {\r\n        dispatch(logoutUser());\r\n      } else {\r\n        const filteredDupicates = data.obj.filter(\r\n          (v, i, a) => a.findIndex((t) => t.className === v.className) === i\r\n        );\r\n        dispatch(receiveClasses(filteredDupicates));\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      //Do something with the error if you want!\r\n      dispatch(ClassesError());\r\n    });\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { HiOutlineClipboardList, HiClipboardCopy } from \"react-icons/hi\";\r\nimport { fetchTeacherTests } from \"../../actions/testActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Skeleton } from \"antd\";\r\nimport \"./index.css\";\r\n\r\nfunction AssignedTests(props) {\r\n  let { tests, isLoading, profileID, trimLength } = props;\r\n  if (tests)\r\n    tests =\r\n      tests.length > trimLength ? tests.slice(-trimLength).reverse() : tests;\r\n\r\n  useEffect(() => {\r\n    props.fetchTests(profileID);\r\n    console.log(\"fired\");\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"left__teacher__header\">\r\n        <p className=\"left__teacher__header__text\">\r\n          {<HiOutlineClipboardList />}Recently Assigned Tests\r\n        </p>\r\n      </div>\r\n      <div className=\"left__body\">\r\n        {!isLoading && tests ? (\r\n          <ul className=\"left__body__list__ul\">\r\n            {tests.map((test, index) => (\r\n              <Link to=\"/assigned-test\" key={index}>\r\n                <li className=\"left__body__test\">\r\n                  <div className=\"test__index\">\r\n                    <p className=\"index__box index__box__teacher \">\r\n                      {index + 1}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"test__name\">\r\n                    {\" \"}\r\n                    {test.testName} - Class {test.className}\r\n                  </div>\r\n                  <div className=\"test__icon\">\r\n                    <HiClipboardCopy />\r\n                  </div>\r\n                </li>\r\n              </Link>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <div className=\"skeleton\">\r\n            {Array(trimLength)\r\n              .fill()\r\n              .map((item, i) => (\r\n                <div className=\"single-skeleton\" key={i}>\r\n                  <Skeleton.Avatar\r\n                    className=\"avatar-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                    shape=\"square\"\r\n                  />\r\n                  <Skeleton.Input\r\n                    className=\"input-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                  />\r\n                </div>\r\n              ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.tests.isLoadingTest,\r\n    tests: state.tests.test,\r\n    profileID: state.auth.profileID,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchTests: (profileID) => dispatch(fetchTeacherTests(profileID)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AssignedTests);\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport Classes from \"./Classes\";\r\nimport AssignedTests from \"./AssignedTests\";\r\nimport \"./Dashboard.css\";\r\n\r\nfunction Dashboard(props) {\r\n  const trimLength = 8;\r\n  // console.log(userInfo);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container dashboard\">\r\n        <Row gutter={[48, 10]} justify=\"center\">\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={9} xl={9}>\r\n            <AssignedTests trimLength={trimLength} />\r\n          </Col>\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={9} xl={9}>\r\n            <Classes trimLength={trimLength} />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Input } from \"antd\";\r\nimport { AudioOutlined } from '@ant-design/icons';\r\nconst { Search } = Input;\r\n\r\nexport default function SearchBox(props) {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    props.handleListData(searchTerm.toLowerCase());\r\n  }, [searchTerm]);\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n  const onSearch = (value) => {\r\n    console.log(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"search__input\">\r\n        <Search\r\n          placeholder=\"input search text\"\r\n          onSearch={onSearch}\r\n          onChange={handleSearchChange}\r\n          enterButton\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Skeleton } from \"antd\";\r\n\r\nexport default function TestList(props) {\r\n  const history = useHistory();\r\n  const [tests, setTests] = useState([]);\r\n  const [searchTests, setSearchTests] = useState([]);\r\n  const [searching, setSearching] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setTests(props.tests.reverse());\r\n  }, [props]);\r\n\r\n  const handleListData = (searchTerm) => {\r\n    if (searchTerm === \"\") setSearching(searchTerm);\r\n    else {\r\n      setSearching(true);\r\n      setSearchTests(\r\n        tests.filter((test) => test.testName.toLowerCase().includes(searchTerm))\r\n      );\r\n    }\r\n  };\r\n\r\n  let selectRef,\r\n    selectedData = {};\r\n\r\n  const handleButtonClick = () => {\r\n    props.handleSelectedTest(selectedData);\r\n    history.push(\"/test-instructions\");\r\n  };\r\n\r\n  const handleSelectTest = (e, index) => {\r\n    if (selectRef) {\r\n      selectRef.classList.remove(\"selected__test\");\r\n    }\r\n    selectRef = e.currentTarget;\r\n    e.currentTarget.classList.add(\"selected__test\");\r\n    selectedData = tests[index];\r\n\r\n    //console.log();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"select__test__wrapper\">\r\n        <p className=\"test__wrapper__heading\">Available Test</p>\r\n        <div className=\"select__test__search__box\">\r\n          <p className=\"search__box__heading\">Search Test</p>\r\n          {<SearchBox handleListData={handleListData} />}\r\n          <div className=\"test__wrapper__body\">\r\n            <p className=\"test__wrapper__heading select__heading\">\r\n              Select Test\r\n            </p>\r\n            <div className=\"select__test__body\">\r\n              {tests && tests.length > 0 ? (\r\n                searching !== \"\" ? (\r\n                  searchTests.map((test, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`test__wrapper`}\r\n                      onClick={(e) => {\r\n                        handleSelectTest(e, index);\r\n                      }}\r\n                    >\r\n                      <p className=\"select__test\" key={index}>\r\n                        {test.testName}\r\n                      </p>\r\n                      <div className=\"test__time\">\r\n                        <p className=\"test start\">\r\n                          Test Duration: {test.minutes} mins\r\n                        </p>\r\n                        <p style={{ color: \"blue\" }}>\r\n                          Total Questions: {test.questions.length}\r\n                        </p>\r\n                      </div>\r\n                      {/* <div className=\"test__time\">\r\n                        <p className=\"time start\">Start: Oct 26 2020 12:14PM</p>\r\n                        <p className=\"time end\">End: Oct 29 2020 11:50PM</p>\r\n                      </div> */}\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  tests.map((test, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`test__wrapper`}\r\n                      onClick={(e) => {\r\n                        handleSelectTest(e, index);\r\n                      }}\r\n                    >\r\n                      <p className=\"select__test\" key={index}>\r\n                        {test.testName}\r\n                      </p>\r\n                      <div className=\"test__time\">\r\n                        <p className=\"test start\">\r\n                          Test Duration: {test.minutes} mins\r\n                        </p>\r\n                        <p style={{ color: \"blue\" }}>\r\n                          Total Questions: {test.questions.length}\r\n                        </p>\r\n                      </div>\r\n                      {/* <div className=\"test__time\">\r\n                        <p className=\"time start\">Start: Oct 26 2020 12:14PM</p>\r\n                        <p className=\"time end\">End: Oct 29 2020 11:50PM</p>\r\n                      </div> */}\r\n                    </div>\r\n                  ))\r\n                )\r\n              ) : (\r\n                <div className=\"select__skeleton\">\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"select__button\">\r\n          <Button type=\"primary\" onClick={handleButtonClick}>\r\n            Continue\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { fetchTests, fetchAttemptTests } from \"../actions/testActions\";\r\nimport { selectedTest } from \"../actions/selectActions\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./SelectTest.css\";\r\nimport TestList from \"./TestList\";\r\n\r\nfunction SelectTest(props) {\r\n  const { tests, studentClassName, profileID } = props;\r\n\r\n  const handleSelectedTest =(testData)=>{\r\n      props.selectedTest(testData);\r\n  }\r\n\r\n  useEffect(() => {\r\n    props.fetchTests(studentClassName);\r\n    props.fetchAttemptTests(profileID);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"select__test__container\">\r\n       <TestList tests={tests} handleSelectedTest={handleSelectedTest} /> \r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tests: state.tests.test,\r\n    profileID: state.auth.profileID,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchTests: (classID) => dispatch(fetchTests(classID)),\r\n    fetchAttemptTests: (profileID) => dispatch(fetchAttemptTests(profileID)),\r\n    selectedTest: (testData) =>dispatch(selectedTest(testData)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectTest);\r\n","import { logoutUser } from \"./authActions\";\r\nexport const TEST_SELECTED = \"TEST_SELECTED\";\r\nexport const SELECTED_TEST_RESULT = \"SELECTED_TEST_RESULT\";\r\nexport const SELECTED_ASSIGNED_TEST = \"SELECTED_ASSIGNED_TEST\";\r\n\r\nconst selectTest = (testData) => {\r\n  return {\r\n    type: TEST_SELECTED,\r\n    testData,\r\n  };\r\n};\r\n\r\nconst selectTestResult = (testData) => {\r\n  return {\r\n    type: SELECTED_TEST_RESULT,\r\n    testData,\r\n  };\r\n};\r\nconst selectAssignedTest = (testData) => {\r\n  return {\r\n    type: SELECTED_ASSIGNED_TEST,\r\n    testData,\r\n  };\r\n};\r\n\r\nexport const selectedTest = (data) => (dispatch) => {\r\n  dispatch(selectTest(data));\r\n};\r\n\r\nexport const selectedTestResult = (data) => (dispatch) => {\r\n  dispatch(selectTestResult(data));\r\n};\r\nexport const selectedAssignedTest = (data) => (dispatch) => {\r\n  dispatch(selectAssignedTest(data));\r\n};\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport SelectTest from \"./SelectTest\";\r\n\r\nfunction AttemptTest(props) {\r\n  const { studentClassName } = props;\r\n  return (\r\n    <>\r\n      <div className=\"container dashboard\">\r\n        <Row gutter={[48, 10]} justify=\"center\">\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={14} xl={14}>\r\n            <SelectTest studentClassName={studentClassName} />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    studentClassName: state.auth.user ? state.auth.user.className : null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(AttemptTest);\r\n","export const Roles ={\r\n    teacher: \"teacher\",\r\n    student: \"student\"\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { logoutUser } from \"../actions/authActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Roles } from \"../Roles/roles\";\r\nimport { useLocation } from 'react-router-dom'\r\n// const SubMenu = Menu.SubMenu;\r\n// const MenuItemGroup = Menu.ItemGroup;\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst LeftMenu = (props) => {\r\n  const [isAuthenticated, setisAuthenticated] = useState(false);\r\n  const location = useLocation();\r\n\r\n  \r\n  // const role = props.role;\r\n  const role = props.userInfo.role;\r\n  //console.log(props)\r\n\r\n  useEffect(() => {\r\n    setisAuthenticated(props.isAuthenticated);\r\n  }, [props]);\r\n\r\n  const signOut = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"userProfile\");\r\n    localStorage.removeItem(\"profileID\");\r\n    props.signOut();\r\n  };\r\n\r\n  const handleProfile = () => {};\r\n\r\n  const { md } = useBreakpoint();\r\n  const homeRoute = isAuthenticated ? \"/\" : \"signin\";\r\n  const testRoute = isAuthenticated ? \"/attempt-test\" : \"signup\";\r\n  const resultRoute = isAuthenticated ? \"/result\" : \"\";\r\n  const signOutRoute = isAuthenticated ? \"/signin\" : \"\";\r\n  const profileRoute = isAuthenticated ? \"/profile\" : \"\";\r\n  const createTestRoute = isAuthenticated ? \"/create-test\" : \"\";\r\n  const assignedTestRoute = isAuthenticated ? \"/assigned-test\" : \"\";\r\n  //console.log(role)\r\n  const style ={\r\n    display: (location.pathname===\"/start-test\")?(\"none\"):(\"block\")\r\n  }\r\n\r\n  return (\r\n    <div className=\"menu\" style={style}>\r\n      <Menu mode={md ? \"horizontal\" : \"inline\"}>\r\n        <Menu.Item key=\"01\">\r\n          <NavLink to={homeRoute}>\r\n            {isAuthenticated ? \"Home\" : \"Sign In\"}\r\n          </NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"02\">\r\n          <NavLink to={Roles.teacher === role ? createTestRoute : testRoute}>\r\n            {isAuthenticated\r\n              ? Roles.teacher === role\r\n                ? \"Create Test\"\r\n                : \"Attempt Test\"\r\n              : \"SignUp\"}\r\n          </NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"03\" className={!isAuthenticated ? \"display-none\" : \"\"}>\r\n          <NavLink\r\n            to={Roles.teacher === role ? assignedTestRoute : resultRoute}\r\n          >\r\n            {isAuthenticated\r\n              ? Roles.teacher === role\r\n                ? \"Assigned Test\"\r\n                : \"Result\"\r\n              : \"\"}\r\n          </NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"05\" className={!isAuthenticated ? \"display-none\" : \"\"}>\r\n          <NavLink to={profileRoute} onClick={handleProfile}>\r\n            {isAuthenticated ? \"Profile\" : \"\"}\r\n          </NavLink>\r\n        </Menu.Item>\r\n      </Menu>\r\n      <div className=\"right-side\">\r\n        <NavLink\r\n          to={signOutRoute}\r\n          onClick={signOut}\r\n          className={!isAuthenticated ? \"display-none signout\" : \"signout\"}\r\n        >\r\n          {isAuthenticated ? \"Sign Out\" : \"\"}\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    userInfo: state.auth.user,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(logoutUser()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftMenu);\r\n","import React, { Component } from \"react\";\r\nimport LeftMenu from \"./LeftMenu\";\r\nimport { Drawer, Button } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Navbar.css\";\r\n\r\n\r\n\r\nclass Navbar extends Component {\r\n  state = {\r\n    current: \"mail\",\r\n    visible: false,\r\n  };\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.userInfo.email);\r\n    localStorage.setItem(\"email\",this.props.userInfo.email)\r\n    return (\r\n      <nav className=\"menuBar\">\r\n        <div className=\"logo\">\r\n          <Link >💻 ExamIN</Link>\r\n        </div>\r\n        <div className=\"menuCon\">\r\n          <div className=\"leftMenu\">\r\n            <LeftMenu />\r\n          </div>\r\n          <Button className=\"barsMenu\" type=\"primary\" onClick={this.showDrawer}>\r\n            <span className=\"barsBtn\"></span>\r\n          </Button>\r\n          <Drawer\r\n            title=\"Menu\"\r\n            placement=\"right\"\r\n            closable={false}\r\n            onClose={this.onClose}\r\n            visible={this.state.visible}\r\n          >\r\n            <LeftMenu role={this.props} />\r\n          </Drawer>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userInfo: state.auth.user,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, null)(Navbar);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Input } from \"antd\";\r\nconst { Search } = Input;\r\nexport default function SearchBox(props) {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    props.handleListData(searchTerm.toLowerCase());\r\n  }, [searchTerm]);\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n  const onSearch = (value) => {\r\n    console.log(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"search__input\">\r\n        <Search\r\n          placeholder=\"input search text\"\r\n          onSearch={onSearch}\r\n          onChange={handleSearchChange}\r\n          enterButton\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Skeleton } from \"antd\";\r\n\r\nexport default function TestList(props) {\r\n  const history = useHistory();\r\n  const [tests, setTests] = useState([]);\r\n  const [searchTests, setSearchTests] = useState([]);\r\n  const [searching, setSearching] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setTests(props.tests.reverse());\r\n  }, [props]);\r\n\r\n  const handleListData = (searchTerm) => {\r\n    if (searchTerm === \"\") setSearching(searchTerm);\r\n    else {\r\n      setSearching(true);\r\n      setSearchTests(\r\n        tests.filter((test) => test.testName.toLowerCase().includes(searchTerm))\r\n      );\r\n    }\r\n  };\r\n\r\n  let selectRef,\r\n    selectedData = {};\r\n\r\n  const handleButtonClick = () => {\r\n    props.handleSelectedTest(selectedData);\r\n    history.push(\r\n      `/result/${selectedData.testName?.replace(/\\s+/g, \"-\").toLowerCase()}`\r\n    );\r\n  };\r\n\r\n  const handleSelectTest = (e, index) => {\r\n    if (selectRef) {\r\n      selectRef.classList.remove(\"selected__test\");\r\n    }\r\n    selectRef = e.currentTarget;\r\n    e.currentTarget.classList.add(\"selected__test\");\r\n    selectedData = tests[index];\r\n    //console.log();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"select__test__wrapper\">\r\n        <p className=\"test__wrapper__heading\">Attempted Test</p>\r\n        <div className=\"select__test__search__box\">\r\n          <p className=\"search__box__heading\">Search Test</p>\r\n          {<SearchBox handleListData={handleListData} />}\r\n          <div className=\"test__wrapper__body\">\r\n            <p className=\"test__wrapper__heading select__heading\">\r\n              Select Test\r\n            </p>\r\n            <div className=\"select__test__body\">\r\n              {tests.length > 0 ? (\r\n                searching !== \"\" ? (\r\n                  searchTests.map((test, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`test__wrapper`}\r\n                      onClick={(e) => {\r\n                        handleSelectTest(e, index);\r\n                      }}\r\n                    >\r\n                      <p className=\"select__test\" key={index}>\r\n                        {test.testName}\r\n                      </p>\r\n                      {/* <div className=\"test__time\">\r\n                        <p className=\"time start\">\r\n                          Published On: Oct 26 2020 12:14PM\r\n                        </p>\r\n                        <p className=\"time end\">\r\n                          Attempted On: Oct 29 2020 11:50PM\r\n                        </p>\r\n                      </div> */}\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  tests.map((test, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`test__wrapper`}\r\n                      onClick={(e) => {\r\n                        handleSelectTest(e, index);\r\n                      }}\r\n                    >\r\n                      <p className=\"select__test\" key={index}>\r\n                        {test.testName}\r\n                      </p>\r\n                      {/* <div className=\"test__time\">\r\n                        <p className=\"time start\">\r\n                          Published On: Oct 26 2020 12:14PM\r\n                        </p>\r\n                        <p className=\"time end\">\r\n                          Attempted On: Oct 29 2020 11:50PM\r\n                        </p>\r\n                      </div> */}\r\n                    </div>\r\n                  ))\r\n                )\r\n              ) : (\r\n                <div className=\"select__skeleton\">\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"select__button\">\r\n          <Button type=\"primary\" onClick={handleButtonClick}>\r\n            Continue\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { fetchAttemptTests } from \"../actions/testActions\";\r\nimport { selectedTestResult } from \"../actions/selectActions\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./SelectTest.css\";\r\nimport TestList from \"./TestList\";\r\n\r\nfunction SelectTest(props) {\r\n  const { tests, profileID } = props;\r\n\r\n  const handleSelectedTest = (testData) => {\r\n    props.selectedTest(testData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.fetchTests(profileID);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"select__test__container\">\r\n        <TestList tests={tests} handleSelectedTest={handleSelectedTest} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tests: state.tests.attemptedTest,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchTests: (profileID) => dispatch(fetchAttemptTests(profileID)),\r\n    selectedTest: (testData) => dispatch(selectedTestResult(testData)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectTest);\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport SelectTest from \"./SelectTest\";\r\n\r\nfunction ResultWrapper(props) {\r\n  const { profileID } = props;\r\n  return (\r\n    <>\r\n      <div className=\"container dashboard\">\r\n        <Row gutter={[48, 10]} justify=\"center\">\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={14} xl={14}>\r\n            <SelectTest profileID={profileID} />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profileID: state.auth.user ? state.auth.profileID : null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(ResultWrapper);\r\n","import React, { useState } from \"react\";\r\nimport { Row, Modal, Col, Button } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./TestInstruction.css\";\r\nimport { FaArrowCircleRight } from \"react-icons/fa\";\r\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction TestInstruction(props) {\r\n  //console.log(props.selectedTest);\r\n  const history = useHistory();\r\n  const { confirm } = Modal;\r\n  const { tests } = props;\r\n  const {\r\n    outOfMarks,\r\n    questions,\r\n    minutes,\r\n    category,\r\n    className,\r\n    testName,\r\n    rules,\r\n    _id: testID,\r\n  } = props.selectedTest;\r\n\r\n  let testRules,\r\n    attempted = false;\r\n\r\n  if (rules) {\r\n    testRules = rules;\r\n  }\r\n\r\n  tests.map((test, index) => {\r\n    if (test.testName === testName) {\r\n      attempted = true;\r\n    }\r\n  });\r\n\r\n  const handleButtonClick = () => {\r\n    confirm({\r\n      title: \"Do you give test now?\",\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: \"Once you click OK , timer will start!\",\r\n      onOk() {\r\n        // console.log(props.selectedTest);\r\n        console.log(\"OK\");\r\n        history.push(\"/start-test\");\r\n      },\r\n      onCancel() {\r\n        console.log(\"Cancel\");\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container dashboard\">\r\n        <Row gutter={[48, 10]} justify=\"center\">\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={22} xl={22}>\r\n            <div className=\"instructions__wrapper\">\r\n              <Row justify=\"center\">\r\n                <Col className=\"gutter-row\" xs={24} sm={24} md={12} xl={12}>\r\n                  <div className=\"instructions__wrapper__left\">\r\n                    <p className=\"instructions__heading\">Test Instructions</p>\r\n                    <div className=\"test__info\">\r\n                      <div className=\"test__subheadings\">\r\n                        <div className=\"test__fields\">Test Name:</div>\r\n                        <div className=\"test__fields__Value\">{testName}</div>\r\n                      </div>\r\n\r\n                      <div className=\"test__subheadings\">\r\n                        <div className=\"test__fields\">Total Questions:</div>\r\n                        <div className=\"test__fields__Value\">\r\n                          {questions?.length}\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"test__subheadings\">\r\n                        <div className=\"test__fields\">Allocated Time:</div>\r\n                        <div className=\"test__fields__Value\">\r\n                          {minutes} Minutes\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"test__subheadings\">\r\n                        <div className=\"test__fields\">Category:</div>\r\n                        <div className=\"test__fields__Value\">{category}</div>\r\n                      </div>\r\n\r\n                      <div className=\"test__subheadings\">\r\n                        <div className=\"test__fields\">Total Marks:</div>\r\n                        <div className=\"test__fields__Value\">{outOfMarks}</div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"test__instructions\">\r\n                      <p className=\"test__instructions__subheading\">\r\n                        Instructions\r\n                      </p>\r\n                      <div className=\"instructions\">\r\n                        {testRules?.map((rule, index) => (\r\n                          <p className=\"rule\" key={index}>\r\n                            <FaArrowCircleRight />{\" \"}\r\n                            <span className=\"rule__description\">\r\n                              {rule.value}\r\n                            </span>\r\n                          </p>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"gutter-row\" xs={24} sm={24} md={12} xl={12}>\r\n                  <div className=\"instructions__wrapper__right\">\r\n                    {/* <div className=\"ems__log__wrapper\">\r\n                      <img\r\n                        src=\"/ems-logo.png\"\r\n                        className=\"ems__logo\"\r\n                        alt=\"ems-logo\"\r\n                      />\r\n                    </div> */}\r\n                    <p className=\"navigation__instructions__heading\">\r\n                      Navigation Buttons\r\n                    </p>\r\n                    <div className=\"navigation__instructions\">\r\n                      <div className=\"navigation__buttons__Feature\">\r\n                        <Button\r\n                          style={{ backgroundColor: \"#449d44\" }}\r\n                          className=\"btn-instructions\"\r\n                        >\r\n                          Next\r\n                        </Button>\r\n                        <p className=\"button__description\">\r\n                          Next: By clicking Next button next question will\r\n                          appear to user\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"navigation__buttons__Feature\">\r\n                        <Button\r\n                          style={{ backgroundColor: \"#449d44\" }}\r\n                          className=\"btn-instructions\"\r\n                        >\r\n                          Previous\r\n                        </Button>\r\n                        <p className=\"button__description\">\r\n                          Next: By clicking Next button next question will\r\n                          appear to user\r\n                        </p>\r\n                      </div>\r\n                      {/* <div className=\"navigation__buttons__Feature\">\r\n                        <Button\r\n                          style={{ backgroundColor: \"#ec971f\" }}\r\n                          className=\"btn-instructions\"\r\n                        >\r\n                          Flag\r\n                        </Button>\r\n                        <p className=\"button__description\">\r\n                          Flag: By clicking Next button next question will\r\n                          appear to user\r\n                        </p>\r\n                      </div> */}\r\n                      <div className=\"navigation__buttons__Feature\">\r\n                        <Button\r\n                          style={{ backgroundColor: \"#ff4d4f\" }}\r\n                          className=\"btn-instructions\"\r\n                        >\r\n                          End Test\r\n                        </Button>\r\n                        <p className=\"button__description\">\r\n                          End Test: By clicking Next button next question will\r\n                          appear to user\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"select__button\">\r\n                      <Button\r\n                        type=\"primary\"\r\n                        onClick={handleButtonClick}\r\n                        disabled={attempted}\r\n                      >\r\n                        Continue\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTest: state.selectedTest.selectedTestData,\r\n    tests: state.tests.attemptedTest,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(TestInstruction);\r\n","import React from \"react\";\r\nimport { Row, Col, Divider, Progress } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./ShowResult.css\";\r\nimport Chart from \"react-google-charts\";\r\n\r\nfunction ShowResult(props) {\r\n  const { testName, date } = props.selectedTest;\r\n  const testInfo = props.selectedTest[0];\r\n  let marks,\r\n    name,\r\n    rightAnswers,\r\n    submitMinutes,\r\n    totalMarks,\r\n    wrongAnswers,\r\n    totalAttempt;\r\n\r\n  if (testInfo) {\r\n    marks = testInfo.correct;\r\n    // name = testInfo.name;\r\n    rightAnswers = testInfo.correct;\r\n    submitMinutes = testInfo.submitMinutes;\r\n    totalMarks = testInfo.totalMarks;\r\n    wrongAnswers = testInfo.wrong;\r\n    totalAttempt = rightAnswers - -wrongAnswers;\r\n  }\r\n  const submitDate = new Date(date);\r\n  return (\r\n    <>\r\n      <div className=\"container dashboard\">\r\n        <Row gutter={[48, 10]} justify=\"center\">\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={14} xl={14}>\r\n            <div className=\"result__wrapper\">\r\n              <div className=\"result__wrapper__header\">\r\n                {/* <div className=\"result__heading\">\r\n                  <div className=\"result__test__name\">Name: </div>\r\n                  <div className=\"result__test__name__field\">{name}</div>\r\n                </div> */}\r\n                <div className=\"result__heading\">\r\n                  <div className=\"result__test__name\">Test Name: </div>\r\n                  <div className=\"result__test__name__field\">{testName}</div>\r\n                </div>\r\n                <div className=\"result__heading\">\r\n                  <div className=\"result__test__name\">Time Taken: </div>\r\n                  <div className=\"result__test__name__field\">\r\n                    {submitMinutes ? submitMinutes : \"XX\"} minutes\r\n                  </div>\r\n                </div>\r\n                <div className=\"result__heading\">\r\n                  <div className=\"result__test__name\">\r\n                    Test Submitted Date:{\" \"}\r\n                  </div>\r\n                  <div className=\"result__test__name__field\">\r\n                    {submitDate.toLocaleDateString(\"en-US\")}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <Divider />\r\n              <div className=\"result__wrapper__body\">\r\n                <div className=\"percentage\">\r\n                  <div className=\"percentage__heading\">Your Score</div>\r\n                  <Progress\r\n                    percent={Math.floor((marks / totalMarks) * 100)}\r\n                    status=\"active\"\r\n                  />\r\n                </div>\r\n                <div className=\"marks__info\">\r\n                  <div className=\"marks__chart\">\r\n                    <Chart\r\n                      width={\"100%\"}\r\n                      height={\"100%\"}\r\n                      chartType=\"PieChart\"\r\n                      loader={<div>Loading Chart</div>}\r\n                      data={[\r\n                        [\"Task\", \"Hours per Day\"],\r\n                        [\"Correct\", marks / 10],\r\n                        [\"Wrong\", totalMarks / 10 - marks / 10],\r\n                      ]}\r\n                      options={{\r\n                        title: \"Marks Distribution\",\r\n                        // Just add this option\r\n                        pieHole: 0.45,\r\n                      }}\r\n                      rootProps={{ \"data-testid\": \"3\" }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"marks\">\r\n                    <h2 className=\"inlarge\">Marks</h2>\r\n                    <div className=\"marksBox\">\r\n                      <div className=\"obtained__marks\">\r\n                        {marks} | {totalMarks}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"attempted\">\r\n                  <div className=\"total__attempted\">\r\n                    <div className=\"percentage\">\r\n                      <div className=\"percentage__heading\">\r\n                        Attempted: {totalAttempt}{\" \"}\r\n                      </div>\r\n                      <Progress\r\n                        percent={Math.floor((totalAttempt / totalMarks) * 100)}\r\n                        status=\"active\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"correct__attempted\">\r\n                    <div className=\"percentage\">\r\n                      <div className=\"percentage__heading\">\r\n                        Correct Answers: {rightAnswers}\r\n                      </div>\r\n                      <Progress\r\n                        percent={Math.floor((rightAnswers / totalMarks) * 100)}\r\n                        status=\"active\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTest: state.selectedTest.selectedTestResultData,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(ShowResult);\r\n","import { logoutUser } from \"./authActions\";\r\nexport const UPDATE_ATTEMPT_TEST_REQUEST = \"UPDATE_ATTEMPT_TEST_REQUEST\";\r\nexport const UPDATE_ATTEMPT_TEST_SUCCESS = \"UPDATE_ATTEMPT_TEST_SUCCESS\";\r\nexport const UPDATE_ATTEMPT_TEST_FAILURE = \"UPDATE_ATTEMPT_TEST_FAILURE\";\r\n\r\nconst requestUpdateTimeSpent = () => {\r\n  return {\r\n    type: UPDATE_ATTEMPT_TEST_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveUpdateTimeSpent = (time) => {\r\n  return {\r\n    type: UPDATE_ATTEMPT_TEST_SUCCESS,\r\n    time,\r\n  };\r\n};\r\n\r\nconst updateTimeSpentError = () => {\r\n  return {\r\n    type: UPDATE_ATTEMPT_TEST_FAILURE,\r\n  };\r\n};\r\n\r\nexport const updateTimeSpentByStudent = (values) => (dispatch) => {\r\n  dispatch(requestUpdateTimeSpent());\r\n  let {\r\n    profileID,\r\n    testName,\r\n    completed,\r\n    minutes: totalTime,\r\n    _id: testID,\r\n    updatingAttemptedMinutes,\r\n  } = values;\r\n\r\n  updatingAttemptedMinutes =\r\n    updatingAttemptedMinutes !== 0 ? updatingAttemptedMinutes : 0;\r\n  console.log(parseInt(updatingAttemptedMinutes));\r\n  let subtractTime =\r\n    updatingAttemptedMinutes == 0 ? parseInt(totalTime) : parseInt(0);\r\n\r\n  let attemptedTime = Math.abs(\r\n    subtractTime - parseInt(updatingAttemptedMinutes - 1)\r\n  );\r\n\r\n  const data = { profileID, testName, completed, attemptedTime, totalTime };\r\n  console.log(completed, totalTime, data.attemptedTime);\r\n\r\n  const requestOptions = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n\r\n    body: JSON.stringify(data),\r\n  };\r\n\r\n  fetch(`/student/update-test-status/${testID}`, requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data) {\r\n        if (data?.error?.name === \"TokenExpiredError\") {\r\n          dispatch(logoutUser());\r\n        } else {\r\n          data.obj.testStatus.map((test, index) => {\r\n            if (test.testID === testID) {\r\n              localStorage.setItem(testID, test.attemptedTime);\r\n            }\r\n          });\r\n\r\n          console.log(data.obj);\r\n          dispatch(receiveUpdateTimeSpent(localStorage.getItem(testID)));\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      //Do something with the error if you want!\r\n      console.log(error);\r\n      dispatch(updateTimeSpentError());\r\n    });\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CountdownTimer from \"react-component-countdown-timer\";\r\n\r\nexport default function Counter(props) {\r\n  const { testID, totalMinutes } = props;\r\n  let time;\r\n  if (JSON.parse(localStorage.getItem(`${testID}`)) == null) {\r\n    time = parseInt(totalMinutes) * 60;\r\n  } else {\r\n    const testData = JSON.parse(localStorage.getItem(`${testID}`));\r\n    let remainingTime = testData.rM;\r\n    time = parseInt(remainingTime * 60);\r\n  }\r\n  const handleCounterEnd =()=>{\r\n    props.handleCounter();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CountdownTimer count={time} hideDay={true} onEnd={handleCounterEnd} />\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class LeftSide extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.accordionContent = [];\r\n    this.state = {\r\n      questionsData: [],\r\n      selectRef: undefined,\r\n      activateQue: 0,\r\n      leftActiveQue: 0,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    return {\r\n      questionsData: props.questionsData,\r\n      activateQue: props.activateQue,\r\n      footerClick: props.footerClick,\r\n    };\r\n  }\r\n\r\n  changeBg = (activatedQue, answered, footerClicked) => {\r\n    if (this.state.selectRef) {\r\n      this.state.selectRef.classList.remove(\"selected\");\r\n      if (answered == false) {\r\n        this.state.selectRef.classList.remove(\"answered\");\r\n      }\r\n    }\r\n    if (this.accordionContent[activatedQue])\r\n      this.accordionContent[activatedQue].classList.add(\"selected\");\r\n    if (answered && footerClicked == false) {\r\n      this.accordionContent[activatedQue].classList.add(\"answered\");\r\n    }\r\n    this.setState({\r\n      selectRef: this.accordionContent[activatedQue],\r\n    });\r\n  };\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (\r\n      nextProps === this.props &&\r\n      nextProps.activateQue == this.props.activateQue\r\n    ) {\r\n      return false;\r\n    } else if (nextProps.selectRef !== this.props.selectRef) {\r\n      return false;\r\n    } else if (nextProps.flag !== this.props.flag) {\r\n      return false;\r\n    } else {\r\n      this.changeBg(\r\n        nextProps.activateQue,\r\n        nextProps.answered,\r\n        nextProps.footerClick\r\n      );\r\n\r\n      return true;\r\n    }\r\n  }\r\n  flagQuestion = () => {\r\n    this.state.selectRef.classList.add(\"flagged\");\r\n  };\r\n  componentDidMount() {\r\n    this.props.flagClicked(this.flagQuestion);\r\n  }\r\n\r\n  setFlag = () => {\r\n    this.state.selectRef.classList.add(\"add-flag\");\r\n  };\r\n\r\n  render() {\r\n    const handleClick = (e, index) => {\r\n      if (this.state.selectRef) {\r\n        this.state.selectRef.classList.remove(\"selected\");\r\n      }\r\n\r\n      this.setState({\r\n        selectRef: this.accordionContent[index],\r\n        leftActiveQue: index,\r\n      });\r\n      this.accordionContent[index].classList.add(\"selected\");\r\n\r\n      this.props.handleQuestionClick(index);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <div className=\"questions__wrapper\">\r\n          {this.state.questionsData &&\r\n            this.state.questionsData.map((question, index) => (\r\n              <div\r\n                className={`question`}\r\n                ref={(ref) => (this.accordionContent[index] = ref)}\r\n                onClick={(e) => handleClick(e, index)}\r\n                key={index}\r\n              >\r\n                {index - -1}\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Radio, Input } from \"antd\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\nimport { submitTest } from \"../actions/testActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { logoutUser } from \"../actions/authActions\";\r\n\r\nclass RightSide extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activateQue: 0,\r\n      questionsData: [],\r\n      changeIndex: 0,\r\n      questionIndex: 0,\r\n      selectedAnswers: Array.apply(undefined, Array(5)),\r\n      value: null,\r\n      testID: null,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    return {\r\n      questionsData: props.questionsData,\r\n      questionIndex: props.questionIndex,\r\n      testID: props.testID,\r\n    };\r\n  }\r\n\r\n  handleClearResponse = (index) => {\r\n    let newSelectedAnswers = this.state.selectedAnswers;\r\n    console.log(newSelectedAnswers[index]);\r\n    let blankClearAttempt =\r\n      newSelectedAnswers[index] === undefined ? true : false;\r\n\r\n    newSelectedAnswers[index] = undefined;\r\n    this.setState({\r\n      selectedAnswers: newSelectedAnswers,\r\n    });\r\n    this.props.handleClearResponse(index, blankClearAttempt);\r\n  };\r\n  onChange = (e, index) => {\r\n    let newSelectedAnswers = this.state.selectedAnswers;\r\n    if (newSelectedAnswers[index] === undefined) {\r\n      this.props.questionAnswered(index, e.target.value, false);\r\n    } else {\r\n      this.props.questionAnswered(index, e.target.value, true);\r\n    }\r\n    newSelectedAnswers[index] = e.target.value;\r\n    this.setState({\r\n      value: e.target.value,\r\n      selectedAnswers: newSelectedAnswers,\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.props.onRef(this);\r\n  }\r\n\r\n  changeActivatedQueInChild = (changeActivatedQue) => {\r\n    if (changeActivatedQue === \"next__question\") {\r\n      console.log(\"insdie if\");\r\n      console.log(this.state.questionsData.length, this.state.activateQue);\r\n      if (this.state.activateQue < this.state.questionsData.length - 1) {\r\n        this.setState({\r\n          activateQue: this.state.activateQue + 1,\r\n        });\r\n        this.props.changeParentActivatedQue(this.state.activateQue + 1);\r\n      }\r\n    } else if (changeActivatedQue === \"previous__question\") {\r\n      if (this.state.activateQue > 0) {\r\n        this.setState({\r\n          activateQue: this.state.activateQue - 1,\r\n        });\r\n        this.props.changeParentActivatedQue(this.state.activateQue - 1);\r\n      }\r\n    } else if (changeActivatedQue === \"flag__question\") {\r\n    } else if (changeActivatedQue === \"end__test\") {\r\n    } else {\r\n      this.setState({\r\n        activateQue: changeActivatedQue,\r\n      });\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.onRef(undefined);\r\n  }\r\n  submitTest = () => {\r\n    const {\r\n      userAnswers,\r\n      answers,\r\n      testName,\r\n      testID,\r\n      profileID,\r\n      firstName,\r\n      lastName,\r\n    } = this.props;\r\n    let correct = 0,\r\n      wrong = 0,\r\n      unanswered = 0,\r\n      totalMarks = answers.length,\r\n      dataToSubmit;\r\n\r\n    userAnswers.map((element, index) => {\r\n      if (element === undefined) {\r\n        unanswered = unanswered + 1;\r\n      } else if (element !== answers[index]) {\r\n        wrong = wrong + 1;\r\n      } else {\r\n        correct = correct + 1;\r\n      }\r\n      dataToSubmit = {\r\n        testID,\r\n        correct,\r\n        unanswered,\r\n        totalMarks,\r\n        profileID,\r\n        testName,\r\n        firstName,\r\n        lastName,\r\n        wrong,\r\n      };\r\n    });\r\n    this.props.submitTest(dataToSubmit);\r\n    this.props.signOut();\r\n    return;\r\n  };\r\n  render() {\r\n    const radioStyle = {\r\n      display: \"block\",\r\n      height: \"30px\",\r\n      lineHeight: \"30px\",\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <div className=\"descripiton__wrapper\">\r\n          <div className=\"question__no\">\r\n            Question {this.state.activateQue + 1} out of {this.state.questionsData.length}\r\n          </div>\r\n          {this.state.questionsData &&\r\n            this.state.questionsData.map((question, index) => {\r\n              if (this.state.activateQue === index) {\r\n                return (\r\n                  <div className=\"description__box\" key={index}>\r\n                    <div className=\"descripiton\"> {question.description}</div>\r\n                    <div className=\"options\">\r\n                      <Radio.Group\r\n                        onChange={(e) => this.onChange(e, index)}\r\n                        value={this.state.selectedAnswers[index]}\r\n                      >\r\n                        <Radio style={radioStyle} value={1}>\r\n                          {question.options[0].option}\r\n                        </Radio>\r\n                        <Radio style={radioStyle} value={2}>\r\n                          {question.options[1].option}\r\n                        </Radio>\r\n                        <Radio style={radioStyle} value={3}>\r\n                          {question.options[2].option}\r\n                        </Radio>\r\n                        <Radio style={radioStyle} value={4}>\r\n                          {question.options[3].option}\r\n                        </Radio>\r\n                      </Radio.Group>\r\n                      <div\r\n                        className=\"clear__response\"\r\n                        onClick={() => this.handleClearResponse(index)}\r\n                      >\r\n                        {<CloseOutlined />} Clear Response\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTest: state.selectedTest.selectedTestData,\r\n    profileID: state.auth.user ? state.auth.profileID : null,\r\n    firstName: state.auth.user.firstName,\r\n    lastName: state.auth.user.lastName,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    submitTest: (data) => dispatch(submitTest(data)),\r\n    signOut: () => dispatch(logoutUser()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RightSide);\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Footer extends Component {\r\n  handleNext = (e) => {\r\n    //this.props.handleNextButton()\r\n    // console.log(e.currentTarget.classList[0])\r\n    this.props.handleFooterButtons(e.currentTarget.classList[0]);\r\n  };\r\n  submitTest = () => {\r\n    this.props.handleSubmitTest();\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"footer__wrapper\">\r\n          <div className=\"left__footer\">\r\n            <div\r\n              className=\"previous__question box\"\r\n              onClick={(e) => this.handleNext(e)}\r\n            >\r\n              Previous\r\n            </div>\r\n            {/* <div\r\n              className=\"flag__question box\"\r\n              onClick={(e) => this.handleNext(e)}\r\n            >\r\n              Flag\r\n            </div> */}\r\n            <div\r\n              className=\"next__question box\"\r\n              onClick={(e) => this.handleNext(e)}\r\n            >\r\n              Next\r\n            </div>\r\n          </div>\r\n          <div className=\"right__footer\">\r\n            <div className=\"end__test box\" onClick={this.submitTest}>\r\n              End Test\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport swal from \"sweetalert\";\r\nimport * as cocoSsd from \"@tensorflow-models/coco-ssd\";\r\nimport \"@tensorflow/tfjs\";\r\nimport \"./Detections.css\";\r\nexport default class Detection extends React.Component {\r\n  // Create video and canvas reference\r\n  videoRef = React.createRef();\r\n  canvasRef = React.createRef();\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { count: 0 };\r\n  }\r\n  componentDidMount() {\r\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n      const webCamPromise = navigator.mediaDevices\r\n        .getUserMedia({\r\n          audio: false,\r\n          video: {\r\n            facingMode: \"user\",\r\n            width: 800,\r\n            height: 400,\r\n          },\r\n        })\r\n        .then((stream) => {\r\n          window.stream = stream;\r\n          this.videoRef.current.srcObject = stream;\r\n          return new Promise((resolve, reject) => {\r\n            this.videoRef.current.onloadedmetadata = () => {\r\n              resolve();\r\n            };\r\n          });\r\n        });\r\n      const modelPromise = cocoSsd.load();\r\n      Promise.all([modelPromise, webCamPromise])\r\n        .then((values) => {\r\n          this.detectFrame(this.videoRef.current, values[0]);\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  }\r\n  /**\r\n   * Use the model to detect objects in the frame, pass the predictions\r\n   * to renderPredictions function then call detectFrame again\r\n   * @param {videoRef} video\r\n   * @param {ModelPromise} model\r\n   */\r\n  detectFrame = (video, model) => {\r\n    model.detect(video).then((predictions) => {\r\n      if (this.canvasRef.current) {\r\n        this.renderPredictions(predictions);\r\n        requestAnimationFrame(() => {\r\n          this.detectFrame(video, model);\r\n        });\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n  };\r\n\r\n  renderPredictions = (predictions) => {\r\n    // setting up the canvas for drawing rectangles and printing\r\n    // prediction text\r\n    const ctx = this.canvasRef.current.getContext(\"2d\");\r\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n    ctx.font = \"16px sans-serif\";\r\n    ctx.textBaseline = \"top\";\r\n\r\n    // looping on predictions and drawing the bounding box for each object\r\n    // and the text label background\r\n    predictions.forEach((prediction) => {\r\n      const x = prediction.bbox[0];\r\n      const y = prediction.bbox[1];\r\n      const width = prediction.bbox[2];\r\n      const height = prediction.bbox[3];\r\n      // Draw the bounding box.\r\n      ctx.strokeStyle = \"#00FFFF\";\r\n      ctx.lineWidth = 2;\r\n      ctx.strokeRect(x, y, width, height);\r\n      // Draw the label background.\r\n      ctx.fillStyle = \"#00FFFF\";\r\n      const textWidth = ctx.measureText(prediction.class).width;\r\n      const textHeight = parseInt(\"16px sans-serif\", 10); // base 10\r\n      ctx.fillRect(x, y, textWidth + 8, textHeight + 8);\r\n    });\r\n\r\n    // Looping over all predictions and drawing text (prediction class)\r\n    predictions.forEach((prediction) => {\r\n      const x = prediction.bbox[0];\r\n      const y = prediction.bbox[1];\r\n\r\n      ctx.fillStyle = \"#000000\";\r\n\r\n      // Draw the text last to ensure it's on top.\r\n      if (\r\n        prediction.class === \"person\" ||\r\n        prediction.class === \"cell phone\" ||\r\n        prediction.class === \"book\" ||\r\n        prediction.class === \"laptop\"\r\n      ) {\r\n        ctx.fillText(prediction.class, x, y);\r\n      }\r\n    });\r\n\r\n    var faces = 0;\r\n    // if face is not visible till 50 consecutive frames, student is\r\n    // not in front of the computer, throw an error\r\n    if (predictions.length === 0 && this.state.count < 50) {\r\n      this.state.count++;\r\n    } else if (predictions.length === 0) {\r\n      this.state.count = 0;\r\n      swal(\"Face Not Visible\", \"Action has been Recorded\", \"error\");\r\n      this.props.FaceNotVisible();\r\n    }\r\n\r\n    // loop over all predictions and check if mobile phone, book, laptop or multiple\r\n    // people are there in the frame\r\n    for (let i = 0; i < predictions.length; i++) {\r\n      if (predictions[i].class === \"cell phone\") {\r\n        this.props.MobilePhone();\r\n        swal(\"Cell Phone Detected\", \"Action has been Recorded\", \"error\");\r\n      } else if (\r\n        predictions[i].class === \"book\" ||\r\n        predictions[i].class === \"laptop\"\r\n      ) {\r\n        this.props.ProhibitedObject();\r\n        swal(\"Prohibited Object Detected\", \"Action has been Recorded\", \"error\");\r\n      } else if (predictions[i].class === \"person\") {\r\n        faces += 1;\r\n        this.state.count = 0;\r\n      }\r\n    }\r\n    if (faces > 1) {\r\n      this.props.MultipleFacesVisible();\r\n      swal(\r\n        faces.toString() + \" people detected\",\r\n        \"Action has been recorded\",\r\n        \"error\"\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <video\r\n          className=\"size\"\r\n          autoPlay\r\n          playsInline\r\n          muted\r\n          ref={this.videoRef}\r\n          width=\"400\"\r\n          height=\"400\"\r\n        />\r\n        <canvas\r\n          className=\"size\"\r\n          ref={this.canvasRef}\r\n          width=\"400\"\r\n          height=\"400\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Detection from \"./Object_Detection\";\r\n// import { button } from \"@mui/material\";\r\nimport swal from \"sweetalert\";\r\nimport \"./ExamPage.css\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport default function TestPage(props) {\r\n  const TestID = props.TestID;\r\n  console.log(TestID);\r\n  //   console.log(\"props.location.state : \"+props.location.state.student_email)\r\n  const email = localStorage.getItem(\"email\");\r\n  const [exam_id, setExamId] = useState(TestID);\r\n  const [minutes, setMinutes] = useState(parseInt(50));\r\n  const [seconds, setSeconds] = useState(parseInt(50 * 60));\r\n  const [tab_change, setTabChange] = useState(0);\r\n  const [key_press, setKeyPress] = useState(0);\r\n  const [full_screen_exit, setFullScreenExit] = useState(0);\r\n  const [mobile_phone_found, setMobilePhoneFound] = useState(false);\r\n  const [prohibited_object_found, setProhibitedObjectFound] = useState(false);\r\n  const [face_not_visible, setFaceNotVisible] = useState(false);\r\n  const [multiple_faces_visible, setMultipleFacesVisible] = useState(false);\r\n  const [checkedPrevLogs, setCheckedPrevLogs] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  /**\r\n   * The below 4 functions are helper functions to set state\r\n   * Are passed to the ObjectDetection component to allow it\r\n   * to change state of its parent (This component)\r\n   */\r\n  function update_mobile_phone_found() {\r\n    setMobilePhoneFound(true);\r\n  }\r\n  function update_prohibited_object_found() {\r\n    setProhibitedObjectFound(true);\r\n  }\r\n  function update_face_not_visible() {\r\n    setFaceNotVisible(true);\r\n  }\r\n  function update_multiple_faces_visible() {\r\n    setMultipleFacesVisible(true);\r\n  }\r\n  /**\r\n   * This function sends the current exam logs to the backend\r\n   * to update the database. This function is called every second.\r\n   */\r\n  function sendLogsToServer() {\r\n    axios\r\n      .post(\"/logs/update\", {\r\n        student_email: email,\r\n        exam_code: TestID,\r\n        key_press_count: key_press,\r\n        tab_change_count: tab_change,\r\n        mobile_found: mobile_phone_found,\r\n        face_not_visible: face_not_visible,\r\n        prohibited_object_found: prohibited_object_found,\r\n        multiple_faces_found: multiple_faces_visible,\r\n      })\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n  /**\r\n   * This function is called when test page is opened for the first time\r\n   * It retrieves cheating data from the server if the student had given the exam\r\n   * before and closed the window in between\r\n   */\r\n  function getPreviousLogs() {\r\n    axios\r\n      .get(\"/logs/logByEmail?exam_id=\" + TestID + \"&email\" + email)\r\n      .then(function (response) {\r\n        console.log(response);\r\n        setKeyPress(parseInt(response.data.key_press_count));\r\n        setTabChange(parseInt(response.data.tab_change_count));\r\n        setMobilePhoneFound(response.data.mobile_found);\r\n        setMultipleFacesVisible(response.data.multiple_faces_found);\r\n        setProhibitedObjectFound(response.data.prohibited_object_found);\r\n        setFaceNotVisible(response.data.face_not_visible);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  function handleVisibilityChange() {\r\n    if (document.hidden) {\r\n      // the page is hidden\r\n      setTabChange(tab_change + 1);\r\n      swal(\"Changed Tab Detected\", \"Action has been Recorded\", \"error\");\r\n    } else {\r\n      // the page is visible\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function is triggered every time a key is pressed. It the pressed\r\n   * key is Ctrl or Alt it shows an error and updates count\r\n   * @param {Keypress Event} event\r\n   * @returns false if key is Ctrl or Alt else true\r\n   */\r\n  function handleKeyPress(event) {\r\n    if (event.altKey) {\r\n      setKeyPress(key_press + 1);\r\n      swal(\"Alt Key Press Detected\", \"Action has been Recorded\", \"error\");\r\n      return false;\r\n    } else if (event.ctrlKey) {\r\n      setKeyPress(key_press + 1);\r\n      swal(\"Ctrl Key Press Detected\", \"Action has been Recorded\", \"error\");\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Initialising all the event handlers when the page loads\r\n    document.addEventListener(\r\n      \"visibilitychange\",\r\n      handleVisibilityChange,\r\n      false\r\n    );\r\n    document.addEventListener(\r\n      \"contextmenu\",\r\n      function (e) {\r\n        e.preventDefault();\r\n      },\r\n      false\r\n    );\r\n    document.addEventListener(\"keydown\", handleKeyPress, false);\r\n\r\n    if (!checkedPrevLogs) {\r\n      getPreviousLogs();\r\n      setCheckedPrevLogs(true);\r\n    }\r\n\r\n    // Removing all event handlers when the page exits\r\n    return function cleanup() {\r\n      document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\r\n      document.removeEventListener(\r\n        \"contextmenu\",\r\n        function (e) {\r\n          e.preventDefault();\r\n        },\r\n        false\r\n      );\r\n      document.removeEventListener(\r\n        \"keydown\",\r\n        (event) => handleKeyPress(event),\r\n        false\r\n      );\r\n    };\r\n  });\r\n\r\n  /**\r\n   * This useEffect function runs every second. It is used to update\r\n   * the minutes and seconds counter and send cheating data to server\r\n   */\r\n  useEffect(() => {\r\n    let myInterval = setInterval(() => {\r\n      if (seconds > 0) {\r\n        setSeconds(seconds - 1);\r\n      } else {\r\n        setMinutes(minutes - 1);\r\n        setSeconds(59);\r\n      }\r\n\r\n      if (minutes === 1 && seconds === 0) {\r\n        swal(\"Only 1 Minute Left, Please Submit or attendance wont be marked\");\r\n      }\r\n\r\n      //   if (seconds <= 0 && minutes <= 0) {\r\n      //     <Redirect to=\"/thankyou\" />;\r\n      //   }\r\n      sendLogsToServer();\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(myInterval);\r\n    };\r\n  });\r\n\r\n  /**\r\n   * This function is called when the student presses exit exam button\r\n   * since data is shared with the backend every second we just redirect to\r\n   * the dashboard after showing a confirmation message\r\n   */\r\n  function handleSubmit() {\r\n    swal(\r\n      \"Thank You for taking the exam. Logs have been shared with your professor\"\r\n    );\r\n    history.push(\"/dashboard\");\r\n  }\r\n  return (\r\n    <div style={{ height: \"100%\" }} className=\"my_container\" id=\"my_container\">\r\n      <div className=\"detect\">\r\n        <Detection\r\n          MobilePhone={update_mobile_phone_found}\r\n          ProhibitedObject={update_prohibited_object_found}\r\n          FaceNotVisible={update_face_not_visible}\r\n          MultipleFacesVisible={update_multiple_faces_visible}\r\n        />\r\n      </div>\r\n\r\n      <br />\r\n      \r\n\r\n      <div className=\"instructions\">\r\n        <p align=\"center\" style={{ fontSize: \"18px\" }}>\r\n          To Save Your Attendance :<br /> Kindly Click{\" \"}\r\n          <strong>Exit Exam</strong> after submitting the exam{\" \"}\r\n        </p>\r\n      </div>\r\n      <div className=\"exit\">\r\n        <center>\r\n          <button\r\n            style={{ fontSize: \"15px\" }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"medium\"\r\n            onClick={handleSubmit}\r\n          >\r\n            Exit Exam\r\n          </button>\r\n        </center>\r\n      </div>\r\n\r\n      {/* <div className=\"test\">\r\n        \r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateTimeSpentByStudent } from \"../actions/attemptTestActions\";\r\nimport \"./HandleLiveTest.css\";\r\nimport LeftSide from \"./LeftSide\";\r\nimport RightSide from \"./RightSide\";\r\nimport Footer from \"./Footer\";\r\nimport { questions } from \"./mockData\";\r\nimport Counter from \"./Counter\";\r\nimport TestPage from \"./TestPage\";\r\nclass HandleLiveTest extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      testID: undefined,\r\n      totalMinutes: undefined,\r\n      questionsData: [],\r\n      answers: [],\r\n      totalScore: 0,\r\n      footerClick: false,\r\n      activateQue: 0,\r\n      totalAnswered: 0,\r\n      answered: false,\r\n      totalPending: null,\r\n      totalFlagged: 0,\r\n      questionIndex: 0,\r\n      flag: 0,\r\n      testName: null,\r\n      userAnswers: Array.apply(undefined, Array(5)),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //  const answers = question\r\n    // make a call using redux\r\n    this.props.counterEnd(this.submitTestOnCounterEnd);\r\n\r\n    this.setState({\r\n      questionsData: this.props.selectedTest.questions,\r\n      // questionsData:questions,\r\n      answers: this.props.selectedTest.answers,\r\n      testID: this.props.testID,\r\n      testName: this.props.selectedTest.testName,\r\n      totalPending: this.props.selectedTest.questions.length,\r\n    });\r\n    // fire function given by redux\r\n  }\r\n\r\n  changeActivatedQueFromFooter = (changeActivatedQue) => {\r\n    if (changeActivatedQue !== \"flag__question\") {\r\n      this.setState({\r\n        footerClick: true,\r\n      });\r\n      this.child.changeActivatedQueInChild(changeActivatedQue);\r\n    } else {\r\n      this.triggerFlag();\r\n      if (this.state.flag <= this.state.questionsData.length) {\r\n        this.setState({\r\n          flag: this.state.flag + 1,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  handleSubmitTest = () => {\r\n    this.child.submitTest();\r\n  };\r\n  changeParentActivatedQue = (index) => {\r\n    this.setState({\r\n      activateQue: index,\r\n      footerClick: true,\r\n    });\r\n  };\r\n  submitTestOnCounterEnd = () => {\r\n    this.handleSubmitTest();\r\n  };\r\n\r\n  handleFooterButtons = (buttonClicked) => {\r\n    this.changeActivatedQueFromFooter(buttonClicked);\r\n  };\r\n\r\n  handleClearResponse = (index, blankClearAttempt) => {\r\n    if (!blankClearAttempt) {\r\n      let updatedUserAnswers = this.state.userAnswers;\r\n      updatedUserAnswers[index] = undefined;\r\n      this.setState({\r\n        totalAnswered: this.state.totalAnswered - 1,\r\n        totalPending: this.state.totalPending + 1,\r\n        userAnswers: updatedUserAnswers,\r\n        activateQue: index,\r\n        footerClick: false,\r\n        answered: false,\r\n      });\r\n    }\r\n  };\r\n  questionAnswered = (index, option, changed) => {\r\n    if (!changed) {\r\n      let updatedUserAnswers = this.state.userAnswers;\r\n      updatedUserAnswers[index] = option;\r\n      this.setState({\r\n        totalAnswered: this.state.totalAnswered + 1,\r\n        totalPending: this.state.totalPending - 1,\r\n        userAnswers: updatedUserAnswers,\r\n        activateQue: index,\r\n        footerClick: false,\r\n        answered: true,\r\n      });\r\n    } else {\r\n      // answers array\r\n      let updatedUserAnswers = this.state.userAnswers;\r\n      updatedUserAnswers[index] = option;\r\n      this.setState({\r\n        userAnswers: updatedUserAnswers,\r\n        activateQue: index,\r\n        footerClick: false,\r\n        answered: true,\r\n      });\r\n    }\r\n  };\r\n  handleQuestionClick = (index) => {\r\n    this.child.changeActivatedQueInChild(index);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"question_board\">\r\n          <div className=\"left__side\">\r\n            <div className=\"test__info\">\r\n              <div className=\"username\"></div>\r\n              <div className=\"test__name\">\r\n                TestName: <span className=\"danger\">{this.props.testName}</span>\r\n              </div>\r\n              <div className=\"total__minutes\">\r\n                Total Minutes:{\" \"}\r\n                <span className=\"danger\">{this.props.totalMinutes}</span>\r\n              </div>\r\n            </div>\r\n            {/* <div className=\"questions__status\">\r\n              <div className=\"total__answered box\">\r\n                <span className=\"count__answered\">\r\n                  {this.state.totalAnswered}{\" \"}\r\n                </span>\r\n                Answered\r\n              </div>\r\n              <div className=\"total__flagged box\">\r\n                <span className=\"count__flagged\">{this.state.flag} </span>\r\n                Flagged\r\n              </div>\r\n              <div className=\"total__pending box\">\r\n                <span className=\"count__pending\">\r\n                  {this.state.totalPending}{\" \"}\r\n                </span>\r\n                Pending\r\n              </div>\r\n            </div> */}\r\n            <div>\r\n              <TestPage TestID={this.state.testID} />\r\n            </div>\r\n          </div>\r\n          <RightSide\r\n            questionsData={this.state.questionsData}\r\n            questionAnswered={this.questionAnswered}\r\n            questionIndex={this.state.questionIndex}\r\n            handleClearResponse={this.handleClearResponse}\r\n            onRef={(ref) => (this.child = ref)}\r\n            changeParentActivatedQue={this.changeParentActivatedQue}\r\n            userAnswers={this.state.userAnswers}\r\n            answers={this.state.answers}\r\n            testID={this.state.testID}\r\n            testName={this.state.testName}\r\n          />\r\n          <div className=\"footer\">\r\n            <Footer\r\n              handleFooterButtons={this.handleFooterButtons}\r\n              handleSubmitTest={this.handleSubmitTest}\r\n            />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTest: state.selectedTest.selectedTestData,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateTimer: (data) => dispatch(updateTimeSpentByStudent(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HandleLiveTest);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateTimeSpentByStudent } from \"../actions/attemptTestActions\";\r\nimport Counter from \"./Counter\";\r\nimport HandleLiveTest from \"./HandleLiveTest\";\r\n\r\nclass TestPreview extends Component {\r\n  state = {\r\n    testName: this.props.selectedTest.testName,\r\n    minutes: this.props.selectedTest.minutes,\r\n    _id: this.props.selectedTest._id,\r\n    intervalId: null,\r\n    timer: this.props.timer,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadData(this.state._id);\r\n    const intervalID = setInterval(this.loadData.bind(this), 60000);\r\n    this.setState({ intervalId: intervalID, timer: this.state.timer });\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.state.intervalId);\r\n  }\r\n  handleCounter =()=>{\r\n    this.clickChild();\r\n  }\r\n\r\n  loadData() {\r\n    try {\r\n      //   let testName, minutes, _id;\r\n      let testName, tM, _id, rM;\r\n      if (JSON.parse(localStorage.getItem(this.state._id)) === null) {\r\n        testName = this.state.testName;\r\n        tM = this.state.minutes;\r\n        _id = this.state._id;\r\n        rM = tM;\r\n        localStorage.setItem(\r\n          `${_id}`,\r\n          JSON.stringify({ testName, _id, tM, rM })\r\n        );\r\n      } else {\r\n        const testData = JSON.parse(localStorage.getItem(`${this.state._id}`));\r\n\r\n        let { testName, tM, _id, rM } = testData;\r\n        rM = rM - 1;\r\n        localStorage.setItem(\r\n          `${_id}`,\r\n          JSON.stringify({ testName, _id, tM, rM })\r\n        );\r\n      }\r\n\r\n      //   const profileID = localStorage.getItem(\"profileID\"),\r\n      //     completed = false;\r\n      //   const testData = JSON.parse(localStorage.getItem(\"trash\"));\r\n      //   let updatingAttemptedMinutes = localStorage.getItem(testData._id);\r\n\r\n      //   const data = {\r\n      //     profileID,\r\n      //     testName,\r\n      //     _id,\r\n      //     completed,\r\n      //     minutes,\r\n      //     updatingAttemptedMinutes,\r\n      //   };\r\n      //   //console.log(this.props.selectedTest, \"props\")\r\n      //   if (_id) {\r\n      //    // this.props.updateTimer(data);\r\n      //   }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  \r\n \r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Counter testID={this.state._id} totalMinutes={this.state.minutes} handleCounter ={this.handleCounter}/>\r\n        <HandleLiveTest\r\n          testID={this.state._id}\r\n          totalMinutes={this.state.minutes}\r\n          testName={this.state.testName}\r\n         \r\n          counterEnd ={click => this.clickChild = click}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTest: state.selectedTest.selectedTestData,\r\n    timer: state.userAttemptedTime.attemptedTime,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateTimer: (data) => dispatch(updateTimeSpentByStudent(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TestPreview);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport TestPreview from \"./TestPreview\";\r\nfunction TestPreviewWrapper(props) {\r\n  const { selectedTest } = props;\r\n  const isSelected = Object.keys(selectedTest).length == 0 ? false : true;\r\n  return (\r\n    <>{isSelected ? <TestPreview /> : <p>Please select a test first</p>}</>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTest: state.selectedTest.selectedTestData,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(TestPreviewWrapper);\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Form, Input, Avatar, Popover } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Profile.css\";\r\nimport { Roles } from \"../Roles/roles\";\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName: undefined,\r\n      isVerified: undefined,\r\n      lastName: undefined,\r\n      email: undefined,\r\n      phone: undefined,\r\n      role: undefined,\r\n      section: undefined,\r\n      isVerified: undefined,\r\n    };\r\n  }\r\n  submitForm = (values) => {\r\n    // props.sendSignUpRequest(values);\r\n    console.log(values);\r\n  };\r\n  static getDerivedStateFromProps(props, state) {\r\n    return {\r\n      firstName: props.user.firstName,\r\n      lastName: props.user.lastName,\r\n      email: props.user.email,\r\n      isVerified: props.userisVerified,\r\n      phone: props.user.phone,\r\n      role: props.user.role,\r\n      section: props.user.section,\r\n      isVerified: props.user.isVerified,\r\n      className: props.user.className,\r\n    };\r\n  }\r\n  render() {\r\n    console.log(this.props.user);\r\n    const verfied = (\r\n      <div>\r\n        <p className=\"verified-popover\">Verified !</p>\r\n      </div>\r\n    );\r\n    const notVerfied = (\r\n      <div>\r\n        <p className=\"notverifieid-popover\">Not Verified!</p>\r\n      </div>\r\n    );\r\n    return (\r\n      <>\r\n        <Row justify=\"center\" align=\"middle\" className=\"hero\">\r\n          <Col xs={22} sm={22} md={8} lg={8} className=\"signup__container\">\r\n            <div className=\"avatar-wrapper\">\r\n              <Avatar\r\n                size={{ xs: 80, sm: 80, md: 80, lg: 80, xl: 90, xxl: 100 }}\r\n                src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\"\r\n                className=\"avatar-image\"\r\n              />\r\n              {/* <Popover content={this.state.isVerified ? verfied : notVerfied}>\r\n                <img\r\n                  src={\r\n                    this.state.isVerified ? \"/verified.png\" : \"/notVerified.png\"\r\n                  }\r\n                  alt=\"verification\"\r\n                  className=\"verified\"\r\n                />\r\n              </Popover> */}\r\n              <p\r\n                className=\"profile__heading\"\r\n                style={{ margin: 0, textAlign: \"center\" }}\r\n              >\r\n                Your Profile\r\n              </p>\r\n            </div>\r\n            <Form\r\n              name=\"basic\"\r\n              initialValues={{\r\n                remember: true,\r\n              }}\r\n              onFinish={this.submitForm}\r\n            >\r\n              <div className=\"element__wrapper\">\r\n                <Form.Item>\r\n                  <Input\r\n                    placeholder=\"First Name\"\r\n                    readonly=\"readOnly\"\r\n                    value={this.state.firstName}\r\n                    className=\"input\"\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  <Input\r\n                    placeholder=\"Last Name\"\r\n                    readonly=\"readOnly\"\r\n                    value={this.state.lastName}\r\n                    className=\"input\"\r\n                  />\r\n                </Form.Item>\r\n              </div>\r\n              <Form.Item>\r\n                <Input\r\n                  placeholder=\"abcd@gmail.com\"\r\n                  readonly=\"readOnly\"\r\n                  value={this.state.email}\r\n                  className=\"input\"\r\n                />\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Input\r\n                  type=\"tel\"\r\n                  placeholder=\"7275XXXXXX\"\r\n                  readonly=\"readOnly\"\r\n                  value={this.state.phone}\r\n                  className=\"input\"\r\n                />\r\n              </Form.Item>\r\n              <div className=\"element__wrapper\">\r\n                <Form.Item>\r\n                  <Input\r\n                    placeholder=\"Role\"\r\n                    readonly=\"readOnly\"\r\n                    value={this.state.role}\r\n                    className=\"input\"\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  className={Roles.teacher === this.state.role ? \"hidden\" : \"\"}\r\n                >\r\n                  <Input\r\n                    placeholder=\"Class\"\r\n                    readonly=\"readOnly\"\r\n                    value={this.state.className}\r\n                    className=\"input\"\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  className={Roles.teacher === this.state.role ? \"hidden\" : \"\"}\r\n                >\r\n                  <Input\r\n                    placeholder=\"Section\"\r\n                    readonly=\"readOnly\"\r\n                    value={this.state.section}\r\n                    className=\"input\"\r\n                  />\r\n                </Form.Item>\r\n              </div>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.auth.user ? state.auth.user : null,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","import React, { useState } from \"react\";\r\nimport { AiFillPlusCircle } from \"react-icons/ai\";\r\nimport { Input, Popover } from \"antd\";\r\n\r\nexport default function Rules(props) {\r\n  const [rule, setRule] = useState(\"\");\r\n  const submitInput = (\r\n    <div>\r\n      <p className=\"verified-popover \">Add Rule</p>\r\n    </div>\r\n  );\r\n\r\n  const handleOnChnage = (e) => {\r\n    setRule(e.target.value);\r\n  };\r\n  const handleAddRule = () => {\r\n    if (rule !== \"\") {\r\n      props.addRule(rule);\r\n      setRule(\"\");\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"rules__wrapper\">\r\n        <div className=\"options__wrapper\">\r\n          <Input\r\n            placeholder=\"Write your rule for test\"\r\n            className=\"input\"\r\n            value={rule}\r\n            onChange={handleOnChnage}\r\n            style={{ margin: \"0 5px\" }}\r\n          />\r\n          <div className=\"add__new\" onClick={handleAddRule}>\r\n            {\r\n              <Popover content={submitInput}>\r\n                <AiFillPlusCircle className=\"success\" />\r\n              </Popover>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Input, Popover } from \"antd\";\r\nimport { AiFillPlusCircle } from \"react-icons/ai\";\r\n\r\nexport default function Rules(props) {\r\n  const [questionDescripiton, setQuestionDescripiton] = useState(\"\");\r\n  const [opiton1, setOption1] = useState(\"\");\r\n  const [opiton2, setOption2] = useState(\"\");\r\n  const [opiton3, setOption3] = useState(\"\");\r\n  const [opiton4, setOption4] = useState(\"\");\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const submitInput = (\r\n    <div>\r\n      <p className=\"verified-popover \">Add Question</p>\r\n    </div>\r\n  );\r\n\r\n  const handleOnChangeQuestion = (e) => {\r\n    setQuestionDescripiton(e.target.value);\r\n  };\r\n  const handleOption1 = (e) => {\r\n    setOption1(e.target.value);\r\n  };\r\n  const handleOption2 = (e) => {\r\n    setOption2(e.target.value);\r\n  };\r\n  const handleOption3 = (e) => {\r\n    setOption3(e.target.value);\r\n  };\r\n  const handleOption4 = (e) => {\r\n    setOption4(e.target.value);\r\n  };\r\n  const handleAnswer = (e) => {\r\n    setAnswer(e.target.value);\r\n  };\r\n  const handleAddQuestion = () => {\r\n    const questionData = {\r\n      questionDescripiton,\r\n      opiton1,\r\n      opiton2,\r\n      opiton3,\r\n      opiton4,\r\n      answer,\r\n    };\r\n\r\n    props.addQuestion(questionData);\r\n    console.log(questionData);\r\n    setQuestionDescripiton(\"\");\r\n    setOption1(\"\");\r\n    setOption2(\"\");\r\n    setOption3(\"\");\r\n    setOption4(\"\");\r\n    setAnswer(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"rules__wrapper\">\r\n        <div className=\"options__wrapper \">\r\n          <Input.TextArea\r\n            placeholder=\"Question Description\"\r\n            className=\"input \"\r\n            value={questionDescripiton}\r\n            onChange={handleOnChangeQuestion}\r\n            style={{ margin: \"0 5px\" }}\r\n          />\r\n          <div className=\"add__new\" onClick={handleAddQuestion}>\r\n            {\r\n              <Popover content={submitInput}>\r\n                <AiFillPlusCircle className=\"success\" />\r\n              </Popover>\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className=\"question__options\">\r\n          <Input\r\n            placeholder=\"Option 1\"\r\n            className=\"input option\"\r\n            value={opiton1}\r\n            onChange={handleOption1}\r\n            style={{ margin: \"10 5px\" }}\r\n          />\r\n          <Input\r\n            placeholder=\"Option 2\"\r\n            className=\"input option\"\r\n            value={opiton2}\r\n            onChange={handleOption2}\r\n            style={{ margin: \"10 5px\" }}\r\n          />\r\n          <Input\r\n            placeholder=\"Option 3\"\r\n            className=\"input option\"\r\n            value={opiton3}\r\n            onChange={handleOption3}\r\n            style={{ margin: \"10 5px\" }}\r\n          />\r\n          <Input\r\n            placeholder=\"Option 4\"\r\n            className=\"input option\"\r\n            value={opiton4}\r\n            onChange={handleOption4}\r\n            style={{ margin: \"10 5px\" }}\r\n          />\r\n          <Input\r\n            placeholder=\"Enter Correct Option No. i.e 1, 2 etc\"\r\n            type=\"number\"\r\n            className=\"input option\"\r\n            value={answer}\r\n            onChange={handleAnswer}\r\n            style={{ margin: \"10 5px\" }}\r\n            min={1}\r\n            max={4}\r\n            \r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Input, Popover } from \"antd\";\r\nimport { TiDelete } from \"react-icons/ti\";\r\n\r\nexport default function RenderData(props) {\r\n  const { ruleData, questionData, question, rules } = props;\r\n\r\n  const handleClick = (index) => {\r\n    props.clickedRule(index);\r\n  };\r\n  return (\r\n    <div className=\"renderData__wrapper\">\r\n      {rules\r\n        ? ruleData &&\r\n          ruleData.map((item, index) => (\r\n            <div key={index}>\r\n              <p className=\"sub__render__heading\">Rule {index + 1}</p>\r\n              <div className=\"render__item\">\r\n                <Input\r\n                  readonly=\"readOnly\"\r\n                  value={item.value}\r\n                  className=\"input\"\r\n                  style={{ margin: \"0 5px\" }}\r\n                />\r\n                <TiDelete\r\n                  className=\"danger\"\r\n                  onClick={() => handleClick(index)}\r\n                  style={{ fontSize:\"30px\"}}\r\n                />\r\n              </div>\r\n            </div>\r\n          ))\r\n        : questionData &&\r\n          questionData.map((item, index) => (\r\n            <div key={index}>\r\n              <p className=\"sub__render__heading\">Question {index + 1}</p>\r\n              <div className=\"render__item\">\r\n                <Input.TextArea\r\n                  readonly=\"readOnly\"\r\n                  value={item.questionDescripiton}\r\n                  className=\"input\"\r\n                  style={{ margin: \"0 5px\" }}\r\n                />\r\n                <TiDelete\r\n                  className=\"danger\"\r\n                  onClick={() => handleClick(index)}\r\n                  style={{ fontSize:\"30px\"}}\r\n                />\r\n              </div>\r\n              <div className=\"question__options\">\r\n                <Input\r\n                  className=\"input option\"\r\n                  value={item.opiton1}\r\n                  readonly=\"readOnly\"\r\n                  style={{ margin: \"10 5px\" }}\r\n                />\r\n                <Input\r\n                  className=\"input option\"\r\n                  value={item.opiton2}\r\n                  readonly=\"readOnly\"\r\n                  style={{ margin: \"10 5px\" }}\r\n                />\r\n                <Input\r\n                  className=\"input option\"\r\n                  value={item.opiton3}\r\n                  readonly=\"readOnly\"\r\n                  style={{ margin: \"10 5px\" }}\r\n                />\r\n                <Input\r\n                  className=\"input option\"\r\n                  value={item.opiton4}\r\n                  readonly=\"readOnly\"\r\n                  style={{ margin: \"10 5px\" }}\r\n                />\r\n                <Input\r\n                  type=\"number\"\r\n                  className=\"input option\"\r\n                  value={item.answer}\r\n                  readonly=\"readOnly\"\r\n                  style={{ margin: \"10 5px\" }}\r\n                />\r\n              </div>\r\n            </div>\r\n          ))}\r\n    </div>\r\n  );\r\n}\r\n","import { logoutUser } from \"./authActions\";\r\nexport const SUBMIT_TEST_REQUEST = \"SUBMIT_TEST_REQUEST\";\r\nexport const SUBMIT_TEST_SUCCESS = \"SUBMIT_TEST_SUCCESS\";\r\nexport const SUBMIT_TEST_FAILURE = \"SUBMIT_TEST_FAILURE\";\r\n\r\nexport const ASSIGNED_TEST_REQUEST = \"ASSIGNED_TEST_REQUEST\";\r\nexport const ASSIGNED_TEST_SUCCESS = \"ASSIGNED_TEST_SUCCESS\";\r\nexport const ASSIGNED_TEST_FAILURE = \"ASSIGNED_TEST_FAILURE\";\r\n\r\nexport const SET_TEST_CREATED_FALSE = \"SET_TEST_CREATED_FALSE\";\r\n\r\nconst requestSubmitTest = () => {\r\n  return {\r\n    type: SUBMIT_TEST_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveSubmitTest = (user, profileID) => {\r\n  return {\r\n    type: SUBMIT_TEST_SUCCESS,\r\n  };\r\n};\r\n\r\nconst submitTestError = () => {\r\n  return {\r\n    type: SUBMIT_TEST_FAILURE,\r\n  };\r\n};\r\n\r\nconst requestAssignedTest = () => {\r\n  return {\r\n    type: ASSIGNED_TEST_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveAssignedTest = (tests) => {\r\n  // console.log(\"Assigned test :\" + tests);\r\n  return {\r\n    type: ASSIGNED_TEST_SUCCESS,\r\n    tests,\r\n  };\r\n};\r\n\r\nconst AssignedTestError = () => {\r\n  return {\r\n    type: ASSIGNED_TEST_FAILURE,\r\n  };\r\n};\r\n\r\nconst setTestCreatedFalse = () => {\r\n  return {\r\n    type: SET_TEST_CREATED_FALSE,\r\n  };\r\n};\r\n\r\nexport const submitTest = (values) => (dispatch) => {\r\n  console.log(values);\r\n\r\n  dispatch(requestSubmitTest());\r\n\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n\r\n    body: JSON.stringify(values),\r\n  };\r\n  //console.log(\"Success:\", values);\r\n  fetch(\"/teacher/create-test\", requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data?.error?.name === \"TokenExpiredError\") {\r\n        dispatch(logoutUser());\r\n      } else {\r\n        \r\n        dispatch(receiveSubmitTest(data.user));\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      //Do something with the error if you want!\r\n      console.log(error);\r\n      dispatch(submitTestError());\r\n    });\r\n};\r\n\r\nexport const fetchAssignedTests = (profileID) => async (dispatch) => {\r\n  dispatch(requestAssignedTest());\r\n\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n  };\r\n\r\n  await fetch(`/teacher/tests/${profileID}`, requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data) {\r\n        if (data?.error?.name === \"TokenExpiredError\") {\r\n          dispatch(logoutUser());\r\n        } else {\r\n          console.log(\" profileID: \" + profileID);\r\n          console.log(\"assigned test data:\" +data.obj);\r\n          dispatch(receiveAssignedTest(data.obj));\r\n        }\r\n        // history.push(\"/studentHome\");\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      //Do something with the error if you want!\r\n      console.log(error);\r\n      dispatch(AssignedTestError());\r\n    });\r\n};\r\n\r\nexport const testCreatedFalse = () => async (dispatch) => {\r\n  dispatch(setTestCreatedFalse());\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Form, Input, Button, Select, notification } from \"antd\";\r\nimport \"./index.css\";\r\nimport { connect } from \"react-redux\";\r\nimport Rules from \"./Rules\";\r\nimport Questions from \"./Questions\";\r\nimport RenderData from \"./RenderData\";\r\nimport { submitTest, testCreatedFalse } from \"../../actions/TeacherActions\";\r\n\r\nclass CreateTest extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rules: [],\r\n      questions: [],\r\n      isLoading: false,\r\n      testCreated: false,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    return {\r\n      isLoading: props.isLoading,\r\n      testCreated: props.testCreated,\r\n    };\r\n  }\r\n\r\n  submitForm = (values) => {\r\n    let questions = [];\r\n    let answers = [];\r\n    console.log(values);\r\n\r\n    const { testName, category, className, section, minutes, outOfMarks } =\r\n      values;\r\n\r\n    questions = this.state.questions.map((question, index) => {\r\n      return {\r\n        description: question.questionDescripiton,\r\n        options: [\r\n          {\r\n            option: question.opiton1,\r\n          },\r\n          {\r\n            option: question.opiton2,\r\n          },\r\n          {\r\n            option: question.opiton3,\r\n          },\r\n          {\r\n            option: question.opiton4,\r\n          },\r\n        ],\r\n      };\r\n    });\r\n    this.state.questions.map((question, index) => {\r\n      answers.push(parseInt(question.answer));\r\n    });\r\n    const teacherId = this.props.teacherID;\r\n    const rules = this.state.rules;\r\n\r\n    const sendData = {\r\n      teacherId,\r\n      testName,\r\n      category,\r\n      className,\r\n      section,\r\n      rules,\r\n      testCreated: false,\r\n      minutes,\r\n      outOfMarks,\r\n      questions,\r\n      answers,\r\n    };\r\n\r\n    this.props.submitTest(sendData);\r\n  };\r\n\r\n  onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  handleSelect = (select, optionData) => {};\r\n\r\n  handleDeleteRule = (Removeindex) => {\r\n    this.setState({\r\n      rules: this.state.rules.filter((item, index) => index !== Removeindex),\r\n    });\r\n  };\r\n  handleDeleteQuestion = (Removeindex) => {\r\n    this.setState({\r\n      questions: this.state.questions.filter(\r\n        (item, index) => index !== Removeindex\r\n      ),\r\n    });\r\n  };\r\n  addRule = (value) => {\r\n    this.setState({\r\n      rules: [...this.state.rules, { value }],\r\n    });\r\n  };\r\n\r\n  openNotification = () => {\r\n    const args = {\r\n      message: \"Test Created\",\r\n      description: \"Congratulations, Your Test created successfully.\",\r\n      duration: 3,\r\n    };\r\n    notification.open(args);\r\n  };\r\n\r\n  addQuestion = ({\r\n    questionDescripiton,\r\n    opiton1,\r\n    opiton2,\r\n    opiton3,\r\n    opiton4,\r\n    answer,\r\n  }) => {\r\n    this.setState({\r\n      questions: [\r\n        ...this.state.questions,\r\n        { questionDescripiton, opiton1, opiton2, opiton3, opiton4, answer },\r\n      ],\r\n    });\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.testCreated) {\r\n      this.props.testCreatedFalse();\r\n      this.openNotification();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { Option } = Select;\r\n\r\n    return (\r\n      <>\r\n        <Row justify=\"center\" align=\"middle\">\r\n          <Col xs={22} sm={22} md={10} lg={10} className=\"signup__container\">\r\n            <p className=\"sub-title__signup\"> 📝 Create Test</p>\r\n            <Form\r\n              name=\"basic\"\r\n              className=\"create__test__form\"\r\n              initialValues={{\r\n                remember: true,\r\n              }}\r\n              onFinish={this.submitForm}\r\n              onFinishFailed={this.onFinishFailed}\r\n            >\r\n              <div className=\"element__wrapper\">\r\n                <Form.Item\r\n                  name=\"testName\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please Enter Test Name!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input placeholder=\"Test Name\" className=\"input\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"outOfMarks\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please enter total marks!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    placeholder=\"Total Marks\"\r\n                    className=\"input\"\r\n                    type=\"number\"\r\n                  />\r\n                </Form.Item>\r\n              </div>\r\n              <Form.Item\r\n                name=\"category\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please enter a category\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Catergory of Test\" className=\"input\" />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"minutes\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please enter total duration of test\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  placeholder=\"Duration of test ( in Minutes )\"\r\n                  className=\"input\"\r\n                  type=\"number\"\r\n                />\r\n              </Form.Item>\r\n\r\n              <div className=\"element__wrapper\">\r\n                <Form.Item\r\n                  name=\"section\"\r\n                  rules={[\r\n                    { required: true, message: \"Please input your section!\" },\r\n                  ]}\r\n                >\r\n                  <Select defaultValue=\"Section\">\r\n                    <Option value=\"A\">A</Option>\r\n                    <Option value=\"B\">B</Option>\r\n                    <Option value=\"C\">C</Option>\r\n                    <Option value=\"D\">D</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"className\"\r\n                  rules={[{ required: true, message: \"Please select a class\" }]}\r\n                >\r\n                  <Select defaultValue=\"Class\">\r\n                    <Option value=\"IX\">IX</Option>\r\n                    <Option value=\"XI\">XI</Option>\r\n                    <Option value=\"XII\">XII</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              </div>\r\n              <p className=\"primary-wihtoutFont\" style={{ fontWeight: \"500\" }}>\r\n                {\" \"}\r\n                Test Rules\r\n              </p>\r\n              <RenderData\r\n                ruleData={this.state.rules}\r\n                rules={true}\r\n                clickedRule={this.handleDeleteRule}\r\n              />\r\n              <Form.Item>\r\n                <Rules addRule={this.addRule} />\r\n              </Form.Item>\r\n              <p className=\"primary-wihtoutFont\" style={{ fontWeight: \"500\" }}>\r\n                {\" \"}\r\n                Test Questions\r\n              </p>\r\n              <RenderData\r\n                questionData={this.state.questions}\r\n                questions={true}\r\n                clickedRule={this.handleDeleteQuestion}\r\n              />\r\n              <Form.Item>\r\n                <Questions addQuestion={this.addQuestion} />\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"primary\"\r\n                  loading={this.state.isLoading}\r\n                  className=\"sign__up\"\r\n                  htmlType=\"submit\"\r\n                  disabled={this.state.questions.length < 1 ? true : false}\r\n                >\r\n                  {this.state.isLoading ? \"Creating Test\" : \"Create Test\"}\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    teacherID: state.auth.profileID,\r\n    isLoading: state.teacher.isLoadingTest,\r\n    testCreated: state.teacher.testCreated,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    submitTest: (values) => dispatch(submitTest(values)),\r\n    testCreatedFalse: () => dispatch(testCreatedFalse()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateTest);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Input } from \"antd\";\r\nconst { Search } = Input;\r\nexport default function SearchBox(props) {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    props.handleListData(searchTerm.toLowerCase());\r\n  }, [searchTerm]);\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n  const onSearch = (value) => {\r\n    console.log(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"search__input\">\r\n        <Search\r\n          placeholder=\"input search text\"\r\n          onSearch={onSearch}\r\n          onChange={handleSearchChange}\r\n          enterButton\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Skeleton } from \"antd\";\r\n\r\nexport default function TestList(props) {\r\n  const history = useHistory();\r\n  const [tests, setTests] = useState([]);\r\n  const [searchTests, setSearchTests] = useState([]);\r\n  const [searching, setSearching] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setTests(props.tests.reverse());\r\n  }, [props]);\r\n\r\n  const handleListData = (searchTerm) => {\r\n    if (searchTerm === \"\") setSearching(searchTerm);\r\n    else {\r\n      setSearching(true);\r\n      setSearchTests(\r\n        tests.filter((test) => test.testName.toLowerCase().includes(searchTerm))\r\n      );\r\n    }\r\n  };\r\n\r\n  let selectRef,\r\n    selectedData = {};\r\n\r\n  const handleButtonClick = () => {\r\n    props.handleSelectedTest(selectedData);\r\n    history.push(\r\n      `/test-status/${selectedData.testName\r\n        ?.replace(/\\s+/g, \"-\")\r\n        .toLowerCase()}`\r\n    );\r\n  };\r\n\r\n  const handleSelectTest = (e, index) => {\r\n    if (selectRef) {\r\n      selectRef.classList.remove(\"selected__test\");\r\n    }\r\n    selectRef = e.currentTarget;\r\n    e.currentTarget.classList.add(\"selected__test\");\r\n    selectedData = tests[index];\r\n    console.log(selectedData);\r\n    //console.log();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"select__test__wrapper\">\r\n        <p className=\"test__wrapper__heading\">Assigned Test</p>\r\n        <div className=\"select__test__search__box\">\r\n          <p className=\"search__box__heading\">Search Test</p>\r\n          {<SearchBox handleListData={handleListData} />}\r\n          <div className=\"test__wrapper__body\">\r\n            <p className=\"test__wrapper__heading select__heading\">\r\n              Select Test\r\n            </p>\r\n            <div className=\"select__test__body\">\r\n              {tests.length > 0 ? (\r\n                searching !== \"\" ? (\r\n                  searchTests.map((test, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`test__wrapper`}\r\n                      onClick={(e) => {\r\n                        handleSelectTest(e, index);\r\n                      }}\r\n                    >\r\n                      <p className=\"select__test\" key={index}>\r\n                        {test.testName}\r\n                      </p>\r\n                      {/* <div className=\"test__time\">\r\n                        <p className=\"time start\">\r\n                          Published On: Oct 26 2020 12:14PM\r\n                        </p>\r\n                        <p className=\"time end\">\r\n                          Attempted On: Oct 29 2020 11:50PM\r\n                        </p>\r\n                      </div> */}\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  tests.map((test, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`test__wrapper`}\r\n                      onClick={(e) => {\r\n                        handleSelectTest(e, index);\r\n                      }}\r\n                    >\r\n                      <p className=\"select__test\" key={index}>\r\n                        {test.testName}\r\n                      </p>\r\n                      {/* <div className=\"test__time\">\r\n                        <p className=\"time start\">\r\n                          Published On: Oct 26 2020 12:14PM\r\n                        </p>\r\n                        <p className=\"time end\">\r\n                          Attempted On: Oct 29 2020 11:50PM\r\n                        </p>\r\n                      </div> */}\r\n                    </div>\r\n                  ))\r\n                )\r\n              ) : (\r\n                <div className=\"select__skeleton\">\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"select__button\">\r\n          <Button type=\"primary\" onClick={handleButtonClick}>\r\n            Continue\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { fetchAssignedTests } from \"../../actions/TeacherActions\";\r\nimport { selectedAssignedTest } from \"../../actions/selectActions\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./SelectTest.css\";\r\nimport TestList from \"./TestList\";\r\n\r\nfunction SelectTest(props) {\r\n  const { tests, profileID } = props;\r\n  // console.log(\"props printing : \" + );\r\n\r\n  const handleSelectedTest = (testData) => {\r\n    props.selectedTest(testData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.fetchTests(profileID);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"select__test__container\">\r\n        <TestList tests={tests} handleSelectedTest={handleSelectedTest} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tests: state.teacher.assignedTests,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchTests: (profileID) => dispatch(fetchAssignedTests(profileID)),\r\n    selectedTest: (testData) => dispatch(selectedAssignedTest(testData)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectTest);\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport SelectTest from \"./SelectTest\";\r\n\r\nfunction AssignedTestsWrapper(props) {\r\n  const { profileID } = props;\r\n  return (\r\n    <>\r\n      <div className=\"container dashboard\">\r\n        <Row gutter={[48, 10]} justify=\"center\">\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={14} xl={14}>\r\n            <SelectTest profileID={profileID} />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profileID: state.auth.user ? state.auth.profileID : null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(AssignedTestsWrapper);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col } from \"antd\";\r\nimport \"./StudentStatus.css\";\r\nimport axios from \"axios\";\r\n// import LogsTable from \"../../result/LogsTable\";\r\nexport default function StudentStatus(props) {\r\n  const student = props.student;\r\n  const className = props.className;\r\n  const testName = props.testName;\r\n  const [data, setData] = useState({});\r\n  const email = localStorage.getItem(\"email\");\r\n  const TestId = props.TestId;\r\n  console.log(TestId);\r\n  useEffect(() => {\r\n    const getProduct = async () => {\r\n      try {\r\n        const res = await axios.get(\r\n          \"/logs/LogByEmail?exam_id=\" + TestId + \"&email=\" + \"test@gmail.com\"\r\n        );\r\n        setData(res.data);\r\n        console.log(res.data);\r\n        // console.log(res);\r\n        // var curr_logs = [];\r\n        // var obj = new Object();\r\n        // obj.s_no = 1;\r\n        // obj.student_name = res.data.student_name;\r\n        // obj.student_email = res.data.student_email;\r\n        // obj.tab_change_count = res.data.tab_change_count;\r\n        // obj.key_press_count = res.data.key_press_count;\r\n        // obj.face_not_visible = res.data.face_not_visible;\r\n        // obj.multiple_faces_found = res.data.multiple_faces_found;\r\n        // obj.mobile_found = res.data.mobile_found;\r\n        // obj.prohibited_object_found = res.data.prohibited_object_found;\r\n        // curr_logs = [...curr_logs, obj];\r\n        // console.log(res.data.mobile_found);\r\n      } catch {}\r\n    };\r\n    getProduct();\r\n  }, [email, TestId]);\r\n  console.log(\"Data : \" + data.student_email);\r\n  return (\r\n    <>\r\n      <Col\r\n        className=\"gutter-row gutter-col-adder\"\r\n        sm={24}\r\n        xs={24}\r\n        md={6}\r\n        lg={6}\r\n      >\r\n        <div className=\"student__status__wrapper\">\r\n          <div className=\"status__header\">\r\n            <p className=\"status__header__heading\">\r\n              {student.firstName.toUpperCase()} {student.lastName.toUpperCase()}\r\n            </p>\r\n          </div>\r\n          <div className=\"student__status__body\">\r\n            <div className=\"status__test\">\r\n              Test Name: <span className=\"status__testname\"> {testName}</span>\r\n            </div>\r\n            <div className=\"status__test__total\">\r\n              Total Marks:{\" \"}\r\n              <span className=\"status__testname\">{student.totalMarks}</span>\r\n            </div>\r\n            <div className=\"status__test__obtained\">\r\n              Obtained Marks:{\" \"}\r\n              <span className=\"status__testname\">{student.correct}</span>\r\n            </div>\r\n            <div className=\"status__test__correct\">\r\n              Correct Answers:{\" \"}\r\n              <span className=\"status__testname success-wihtoutFont\">\r\n                {student.correct}\r\n              </span>\r\n            </div>\r\n            <div className=\"status__test__wrong\">\r\n              Wrong Answers:{\" \"}\r\n              <span className=\"status__testname danger\">{student.wrong}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Col>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { alpha } from \"@mui/material/styles\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { visuallyHidden } from \"@mui/utils\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\n// import DeleteIcon from \"@mui/icons-material/Delete\";\r\n// import FilterListIcon from \"@mui/icons-material/FilterList\";\r\n// import SearchBar from \"material-ui-search-bar\";\r\nimport axios from \"axios\";\r\n\r\n/**\r\n * Comparator function for descending sort\r\n * @param {Comparator} a\r\n * @param {Comparator} b\r\n * @param {String} orderBy asc or desc\r\n * @returns -1 if a>b, 1 if b>a 0 if equal\r\n */\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\n/**\r\n * Creates ascending and decending comparator\r\n * @param {String} order asc or desc\r\n * @param {*} orderBy\r\n * @returns descendingComparator value (-1,0,1)\r\n */\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\n// This function sorts an array given a comparator\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n// Array of the header cells of the table\r\n// each element is an object containing that header cell's properties\r\nconst headCells = [\r\n  { id: \"s_no\", numeric: false, disablePadding: false, label: \"S. No.\" },\r\n  {\r\n    id: \"student_email\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Email\",\r\n  },\r\n  {\r\n    id: \"tab_change_count\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Tab Changes\",\r\n  },\r\n  {\r\n    id: \"key_press_count\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Prohibited Key Press\",\r\n  },\r\n  {\r\n    id: \"face_not_visible\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Face Not Visible\",\r\n  },\r\n  {\r\n    id: \"multiple_faces_found\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Multiple Faces Detected\",\r\n  },\r\n  {\r\n    id: \"mobile_found\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Mobile Found\",\r\n  },\r\n  {\r\n    id: \"prohibited_object_found\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Prohibited Object Found\",\r\n  },\r\n];\r\n\r\n/**\r\n * Creates the Table Head\r\n * @param {Props} props\r\n * @returns rendering component\r\n */\r\n\r\n\r\n// EnhancedTableHead.propTypes = {\r\n//   classes: PropTypes.object.isRequired,\r\n//   numSelected: PropTypes.number.isRequired,\r\n//   onRequestSort: PropTypes.func.isRequired,\r\n//   onSelectAllClick: PropTypes.func.isRequired,\r\n//   order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n//   orderBy: PropTypes.string.isRequired,\r\n//   rowCount: PropTypes.number.isRequired,\r\n// };\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(numSelected > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(\r\n              theme.palette.primary.main,\r\n              theme.palette.action.activatedOpacity\r\n            ),\r\n        }),\r\n      }}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          sx={{ flex: \"1 1 100%\" }}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{ flex: \"1 1 100%\" }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Exam Logs\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton>{/* <DeleteIcon /> */}</IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton>{/* <FilterListIcon /> */}</IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\n/**\r\n * This function is the main function of this file\r\n * It creates the whole table\r\n * @returns renders the table\r\n */\r\nexport default function LogsTable(props) {\r\n  const [exam_code, setExamCode] = React.useState(props.TestId);\r\n  console.log(\"Test ID props : \" + exam_code);\r\n  const [visibility, setVisibility] = React.useState(false);\r\n  const [error_text, setErrorText] = React.useState(\"\");\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"company\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [rows, setRows] = React.useState([]);\r\n  const [TableData, setTableData] = React.useState([]);\r\n  const [searched, setSearched] = React.useState(\"\");\r\n\r\n  /**\r\n   * Gets student logs from the server using the exam code and professor's email\r\n   * and updates the table\r\n   *\r\n   */\r\n  const getData = async () => {\r\n    try {\r\n      // check if exam code is valid and it is one of professor's exams\r\n      const response = await axios.post(\"/logs/allData\", {\r\n        exam_code: exam_code,\r\n      });\r\n\r\n      setErrorText(\"\");\r\n      setVisibility(true);\r\n\r\n      var curr_logs = [];\r\n      // loop over the response and store it in the state\r\n      for (var i = 0; i < response.data.length; i++) {\r\n        var obj = new Object();\r\n        obj.s_no = i + 1;\r\n        obj.student_name = response.data[i].student_name;\r\n        obj.student_email = response.data[i].student_email;\r\n        obj.tab_change_count = response.data[i].tab_change_count;\r\n        obj.key_press_count = response.data[i].key_press_count;\r\n        obj.face_not_visible = response.data[i].face_not_visible;\r\n        obj.multiple_faces_found = response.data[i].multiple_faces_found;\r\n        obj.mobile_found = response.data[i].mobile_found;\r\n        obj.prohibited_object_found = response.data[i].prohibited_object_found;\r\n        curr_logs = [...curr_logs, obj];\r\n      }\r\n      setTableData(curr_logs);\r\n      setRows(curr_logs);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.company);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  /**\r\n   * Filters rows based on the search string present in name or email of the student\r\n   * @param {String} searchVal\r\n   */\r\n  const requestSearch = (searchVal) => {\r\n    const filteredRows = TableData.filter((row) => {\r\n      // for each row of data check if name or email contains the search string\r\n      if (\r\n        row.student_name.toLowerCase().includes(searchVal.toLowerCase()) ||\r\n        row.student_email.toLowerCase().includes(searchVal.toLowerCase())\r\n      ) {\r\n        return true;\r\n      } else return false;\r\n    });\r\n    setRows(filteredRows);\r\n  };\r\n  /**\r\n   * Cancels the search and sets the whole table to original position\r\n   */\r\n  const cancelSearch = () => {\r\n    setSearched(\"\");\r\n    requestSearch(searched);\r\n  };\r\n  const isSelected = (company) => selected.indexOf(company) !== -1;\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n  const formatValue = (value) => value.toFixed(0);\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\" }}>\r\n      <TextField\r\n        autoFocus\r\n        InputLabelProps={{\r\n          sx: {\r\n            color: \"white\",\r\n          },\r\n        }}\r\n        InputProps={{\r\n          disableUnderline: true,\r\n        }}\r\n        padding=\"10px\"\r\n        margin=\"dense\"\r\n        variant=\"standard\"\r\n        id=\"exam_code\"\r\n        label=\"Exam Code\"\r\n        type=\"text\"\r\n        required={true}\r\n        value={exam_code}\r\n        onChange={(e) => setExamCode(e.target.value)}\r\n      />\r\n\r\n      <button\r\n        style={{\r\n          width: \"200px\",\r\n          borderRadius: \"3px\",\r\n          letterSpacing: \"1.5px\",\r\n          marginLeft: \"10px\",\r\n          marginTop: \"1rem\",\r\n        }}\r\n        onClick={getData}\r\n        className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n      >\r\n        Check Logs\r\n      </button>\r\n\r\n      <br />\r\n\r\n      <p style={{ color: \"red\", textAlign: \"center\" }}> {error_text} </p>\r\n\r\n      {visibility === true && (\r\n        <Paper sx={{ width: \"100%\", mb: 2 }}>\r\n          {/* <SearchBar\r\n            value={searched}\r\n            onChange={(searchVal) => requestSearch(searchVal)}\r\n            onCancelSearch={() => cancelSearch()}\r\n            style={{ border: \"3px solid rgba(0, 0, 0, 0.05)\" }}\r\n          /> */}\r\n          <EnhancedTableToolbar numSelected={selected.length} />\r\n          <TableContainer>\r\n            <Table\r\n              sx={{ minWidth: 750 }}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={dense ? \"small\" : \"medium\"}\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  {headCells.map((headCell) => (\r\n                    <TableCell\r\n                      key={headCell.id}\r\n                      align={headCell.numeric ? \"right\" : \"left\"}\r\n                      padding={headCell.disablePadding ? \"none\" : \"normal\"}\r\n                    >\r\n                      {headCell.id}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {stableSort(rows, getComparator(order, orderBy))\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row, index) => {\r\n                    const isItemSelected = isSelected(row.company);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    return (\r\n                      <TableRow hover key={row.s_no}>\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          id={labelId}\r\n                          scope=\"row\"\r\n                          padding=\"normal\"\r\n                        >\r\n                          {row.s_no}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">{row.student_email}</TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {row.tab_change_count}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {row.key_press_count}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">\r\n                          {row.face_not_visible === true ? \"Yes\" : \"No\"}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">\r\n                          {row.multiple_faces_found === true ? \"Yes\" : \"No\"}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">\r\n                          {row.mobile_found === true ? \"Yes\" : \"No\"}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">\r\n                          {row.prohibited_object_found === true ? \"Yes\" : \"No\"}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                {emptyRows > 0 && (\r\n                  <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                    <TableCell colSpan={6} />\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={rows.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n      )}\r\n      <br />\r\n      <br />\r\n    </Box>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport StudentStatus from \"./StudentStatus\";\r\nimport LogsTable from \"./LogsTable\";\r\n\r\nfunction TestStatus(props) {\r\n  console.log(props.selectedTest);\r\n  const style = { background: \"#0092ff\", padding: \"8px 0\" };\r\n  const students = props.selectedTest.submitBy;\r\n  const className = props.selectedTest.className;\r\n  const testName = props.selectedTest.testName;\r\n  const TestId = props.selectedTest._id;\r\n  console.log(\"selectedTest : \" + props.selectedTest._id);\r\n  return (\r\n    <>\r\n      <div className=\"container student__status\">\r\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n          {students.length > 0 &&\r\n            students.map((student, index) => (\r\n              <StudentStatus\r\n                className={className}\r\n                testName={testName}\r\n                student={student}\r\n                key={index}\r\n                TestId={TestId}\r\n              />\r\n            ))}\r\n        </Row>\r\n        <LogsTable TestId={TestId} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTest: state.selectedTest.selectedAssignedTestData,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(TestStatus);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Login from \"../logIn/Login\";\r\nimport Signup from \"../signUp/Signup\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport ProtectedRoute from \"../protectedRoute/ProtectedRoute\";\r\nimport StudentDashboard from \"../dashboard/Dashboard\";\r\nimport TeacherDashboard from \"../Teacher/Dashboard/Dashboard\";\r\nimport AttemptTest from \"../attemptTest/AttemptTest\";\r\nimport Navbar from \"../navbar\";\r\nimport Result from \"../result/ResultWrapper\";\r\nimport TestInstruction from \"../TestInstructions/TestInstruction\";\r\nimport IndividualResult from \"../result/ShowResult\";\r\nimport TestPreviewWrapper from \"../testPreview/TestPreviewWrapper\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal } from \"antd\";\r\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Profile from \"../profile/Profile\";\r\nimport { Roles } from \"../Roles/roles\";\r\nimport CreateTest from \"../Teacher/CreateTest/CreateTest\";\r\nimport AssignedTestsWrapper from \"../Teacher/AssigenedTest/AssignedTestsWrapper\";\r\nimport TestStatus from \"../Teacher/TestStatus/TestStatus\";\r\nimport { message } from \"antd\";\r\nimport { Offline, Online } from \"react-detect-offline\";\r\n\r\nfunction App(props) {\r\n  const [count, setCount] = useState(1);\r\n\r\n  const handleOffline = () => {\r\n    setCount(count + 1);\r\n    if (count % 2 == 0) {\r\n      message.success(\"Connected to internet\");\r\n    } else {\r\n      message.error(\"Please connect to internet\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"contextmenu\", (e) => {\r\n      e.preventDefault();\r\n    });\r\n    window.addEventListener(\"keydown\", (e) => {\r\n      console.log(e);\r\n      if (e.key == \"F12\") {\r\n        e.preventDefault();\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const { selectedTestName, selectedAssignedTestName } = props;\r\n  const role = props.userInfo.role;\r\n  const { confirm } = Modal;\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className={count % 2 ? \"\" : \" pointer__select__none\"}>\r\n      <Offline onChange={(e) => handleOffline(e)}></Offline>\r\n      <Router>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact={true} path={\"/signin\"} component={Login} />\r\n          <Route exact={true} path=\"/signup\" component={Signup} />\r\n          <ProtectedRoute\r\n            exact={true}\r\n            path=\"/\"\r\n            component={\r\n              Roles.teacher === role ? TeacherDashboard : StudentDashboard\r\n            }\r\n          />\r\n          <ProtectedRoute\r\n            exact={true}\r\n            path=\"/attempt-test\"\r\n            component={AttemptTest}\r\n          />\r\n          <ProtectedRoute\r\n            exact={true}\r\n            path=\"/create-test\"\r\n            component={Roles.teacher === role ? CreateTest : AttemptTest}\r\n          />\r\n          <ProtectedRoute exact={true} path=\"/result\" component={Result} />\r\n          <ProtectedRoute\r\n            exact={true}\r\n            path={`/result/${selectedTestName}`}\r\n            component={IndividualResult}\r\n          />\r\n          <ProtectedRoute\r\n            exact={true}\r\n            path=\"/test-instructions\"\r\n            component={TestInstruction}\r\n          />\r\n          <ProtectedRoute\r\n            exact={true}\r\n            path=\"/start-test\"\r\n            component={TestPreviewWrapper}\r\n          />\r\n          <ProtectedRoute exact={true} path=\"/profile\" component={Profile} />\r\n          <ProtectedRoute\r\n            exact={true}\r\n            path=\"/assigned-test\"\r\n            component={\r\n              Roles.teacher === role ? AssignedTestsWrapper : StudentDashboard\r\n            }\r\n          />\r\n          <ProtectedRoute\r\n            exact={true}\r\n            path={`/test-status/${selectedAssignedTestName}`}\r\n            component={TestStatus}\r\n          />\r\n          <ProtectedRoute component={Login} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTestName: state.selectedTest.selectedTestResultData.testName\r\n      ?.replace(/\\s+/g, \"-\")\r\n      .toLowerCase(),\r\n    userInfo: state.auth.user,\r\n    selectedAssignedTestName: state.selectedTest.selectedAssignedTestData.testName\r\n      ?.replace(/\\s+/g, \"-\")\r\n      .toLowerCase(),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {\r\n  LOGIN_FAILURE,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  LOGOUT_FAILURE,\r\n  LOGOUT_REQUEST,\r\n  LOGOUT_SUCCESS,\r\n  VERIFY_REQUEST,\r\n  VERIFY_SUCCESS,\r\n  SEND_PASS_RESET_SUCCESS,\r\n  SEND_PASS_RESET,\r\n  SEND_PASS_RESET_ERROR,\r\n  USER_ACCOUNT_CREATED,\r\n} from \"../actions/authActions\";\r\n// import storageListner from \"../storageListener/localStorageListener\";\r\n\r\nconst initialState = {\r\n  isLoggingIn: false,\r\n  isSigningUp: false,\r\n  isLoading: false,\r\n  isLoggingOut: false,\r\n  isVerifying: false,\r\n  loginError: false,\r\n  signupError: false,\r\n  logoutError: false,\r\n  accountCreated: false,\r\n  isAuthenticated: localStorage.getItem(\"token\") ? true : false,\r\n  sendPassResetSuccess: false,\r\n  sendPassResetError: false,\r\n  profileID: localStorage.getItem(\"profileID\"),\r\n  user: JSON.parse(localStorage.getItem(\"userProfile\"))\r\n    ? JSON.parse(localStorage.getItem(\"userProfile\"))\r\n    : {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOGIN_REQUEST:\r\n      console.log(\"login request fired\");\r\n      return {\r\n        ...state,\r\n        isLoggingIn: true,\r\n        isLoading: true,\r\n        loginError: false,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      console.log(\"login success fired\", action.obj);\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n        isLoading: false,\r\n        isAuthenticated: true,\r\n        user: action.user,\r\n        profileID: action.profileID,\r\n      };\r\n    case LOGIN_FAILURE:\r\n      console.log(\"login failure fired\");\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n        loginError: true,\r\n      };\r\n\r\n    case SIGN_UP_REQUEST:\r\n      return {\r\n        ...state,\r\n        isSigningUp: true,\r\n        isLoading: true,\r\n        signupError: false,\r\n      };\r\n\r\n    case SIGN_UP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isSigningUp: false,\r\n        isLoading: false,\r\n        signupError: false,\r\n        accountCreated: true,\r\n        // isAuthenticated: true,\r\n        // user: action.user,\r\n      };\r\n\r\n    case SIGN_UP_FAILURE:\r\n      return {\r\n        ...state,\r\n        isSigningUp: false,\r\n        isLoading: false,\r\n        signupError: action.errMess,\r\n      };\r\n\r\n    case USER_ACCOUNT_CREATED:\r\n      return {\r\n        ...state,\r\n        accountCreated: false,\r\n      };\r\n\r\n    case SEND_PASS_RESET:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        sendPassResetSuccess: false,\r\n        sendPassResetError: false,\r\n      };\r\n\r\n    case SEND_PASS_RESET_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        sendPassResetSuccess: true,\r\n        sendPassResetError: false,\r\n      };\r\n\r\n    case SEND_PASS_RESET_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        sendPassResetSuccess: false,\r\n        sendPassResetError: action.errMess,\r\n      };\r\n\r\n    case LOGOUT_REQUEST:\r\n      return { ...state, isLoggingOut: true, logoutError: false };\r\n\r\n    case LOGOUT_SUCCESS:\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"userProfile\");\r\n      localStorage.removeItem(\"profileID\");\r\n      return {\r\n        ...state,\r\n        isLoggingOut: false,\r\n        isAuthenticated: false,\r\n        user: {},\r\n      };\r\n\r\n    case LOGOUT_FAILURE:\r\n      return { ...state, isLoggingOut: false, logoutError: true };\r\n\r\n    case VERIFY_REQUEST:\r\n      return { ...state, isVerifying: true, verifyingError: false };\r\n\r\n    case VERIFY_SUCCESS:\r\n      return { ...state, isVerifying: false };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  FETCH_TEST_REQUEST,\r\n  FETCH_TEST_SUCCESS,\r\n  FETCH_ATTEMPT_TEST_SUCCESS,\r\n  FETCH_TEST_FAILURE,\r\n  SUBMIT_TEST_FAILURE,\r\n  SUBMIT_TEST_SUCCESS,\r\n  FETCH_TEACHER_TEST_REQUEST,\r\n  FETCH_TEACHER_TEST_SUCCESS,\r\n  FETCH_TEACHER_TEST_FAILURE,\r\n} from \"../actions/testActions\";\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  isLoadingTest: false,\r\n  isLoadingAttemptedTest: false,\r\n  fetchingError: false,\r\n  isFetched: false,\r\n  testSubmitted: false,\r\n  testSubmitError: false,\r\n  test: [],\r\n  attemptedTest: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_TEST_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        isLoadingTest: true,\r\n        isLoadingAttemptedTest: true,\r\n        fetchingError: false,\r\n      };\r\n    case FETCH_TEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        isLoadingTest: false,\r\n        isFetched: true,\r\n        test: action.tests,\r\n      };\r\n    case FETCH_TEACHER_TEST_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        isLoadingTest: true,\r\n        isLoadingAttemptedTest: true,\r\n        fetchingError: false,\r\n      };\r\n\r\n    case FETCH_TEACHER_TEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        isLoadingTest: false,\r\n        isFetched: true,\r\n        test: action.tests,\r\n      };\r\n\r\n    case FETCH_TEACHER_TEST_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        isFetched: false,\r\n        isLoadingTest: false,\r\n        isLoadingAttemptedTest: false,\r\n        fetchError: true,\r\n      };\r\n\r\n    case FETCH_ATTEMPT_TEST_SUCCESS:\r\n      // console.log(action.tests)\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        isLoadingAttemptedTest: false,\r\n        attemptedTest: action.tests[0].attemptedTest,\r\n      };\r\n\r\n    case FETCH_TEST_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        isFetched: false,\r\n        isLoadingTest: false,\r\n        isLoadingAttemptedTest: false,\r\n        fetchError: true,\r\n      };\r\n    case SUBMIT_TEST_SUCCESS:\r\n      localStorage.removeItem(action.testID);\r\n      return {\r\n        ...state,\r\n        testSubmitted: true,\r\n        testSubmitError: false,\r\n      };\r\n    case SUBMIT_TEST_FAILURE:\r\n      return {\r\n        ...state,\r\n        testSubmitted: false,\r\n        testSubmitError: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  TEST_SELECTED,\r\n  SELECTED_TEST_RESULT,\r\n  SELECTED_ASSIGNED_TEST,\r\n} from \"../actions/selectActions\";\r\n\r\nconst initialState = {\r\n  selectedTestData: {},\r\n  selectedTestResultData: {},\r\n  selectedAssignedTestData: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case TEST_SELECTED:\r\n      // console.log(\"login success fired\", action.obj)\r\n      return {\r\n        ...state,\r\n        selectedTestData: action.testData,\r\n      };\r\n\r\n    case SELECTED_TEST_RESULT:\r\n      // console.log(\"login success fired\", action.obj)\r\n      return {\r\n        ...state,\r\n        selectedTestResultData: action.testData,\r\n      };\r\n    case SELECTED_ASSIGNED_TEST:\r\n      // console.log(\"login success fired\", action.obj)\r\n      return {\r\n        ...state,\r\n        selectedAssignedTestData: action.testData,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  UPDATE_ATTEMPT_TEST_REQUEST,\r\n  UPDATE_ATTEMPT_TEST_SUCCESS,\r\n  UPDATE_ATTEMPT_TEST_FAILURE,\r\n} from \"../actions/attemptTestActions\";\r\n\r\nconst initialState = {\r\n  attemptedTime: 0,\r\n  isFetching: false,\r\n  isFetched: false,\r\n  isFetchingError: false,\r\n  initializeTimer: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case UPDATE_ATTEMPT_TEST_REQUEST:\r\n      // console.log(\"login success fired\", action.obj)\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n      };\r\n\r\n    case UPDATE_ATTEMPT_TEST_SUCCESS:\r\n      // console.log(\"login success fired\", action.obj)\r\n      //console.log(action.data);\r\n      const checker = state.initializeTimer;\r\n      return {\r\n        ...state,\r\n        isFetched: true,\r\n        isFetching: false,\r\n        attemptedTime: action.time,\r\n        initializeTimer: true,\r\n      };\r\n    case UPDATE_ATTEMPT_TEST_FAILURE:\r\n      // console.log(\"login success fired\", action.obj)\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        isFetched: false,\r\n        isFetchingError: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  FETCH_CLASSES_REQUEST,\r\n  FETCH_CLASSES_SUCCESS,\r\n  FETCH_CLASSES_FAILURE,\r\n} from \"../actions/classesActions\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  isFetched: false,\r\n  isFetchError: false,\r\n  classes: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_CLASSES_REQUEST:\r\n      // console.log(\"login success fired\", action.obj)\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case FETCH_CLASSES_SUCCESS:\r\n      // console.log(\"login success fired\", action.obj)\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isFetched: true,\r\n        classes: action.data,\r\n      };\r\n\r\n    case FETCH_CLASSES_FAILURE:\r\n      // console.log(\"login success fired\", action.obj)\r\n      return {\r\n        ...state,\r\n        isfetched: false,\r\n        isLoading: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  SUBMIT_TEST_REQUEST,\r\n  SUBMIT_TEST_SUCCESS,\r\n  SUBMIT_TEST_FAILURE,\r\n  ASSIGNED_TEST_REQUEST,\r\n  ASSIGNED_TEST_FAILURE,\r\n  ASSIGNED_TEST_SUCCESS,\r\n  SET_TEST_CREATED_FALSE,\r\n} from \"../actions/TeacherActions\";\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  isLoadingTest: false,\r\n  fetchingError: false,\r\n  isFetched: false,\r\n  testCreated: false,\r\n  testSubmitted: false,\r\n  testSubmitError: false,\r\n  assignedTests: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SUBMIT_TEST_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        isLoadingTest: true,\r\n        fetchingError: false,\r\n      };\r\n    case SUBMIT_TEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        testCreated: true,\r\n        isLoadingTest: false,\r\n        isFetched: true,\r\n      };\r\n    case SUBMIT_TEST_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        isLoadingTest: true,\r\n        fetchingError: false,\r\n      };\r\n    case ASSIGNED_TEST_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        isLoadingTest: true,\r\n        fetchingError: false,\r\n      };\r\n    case ASSIGNED_TEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        testCreated: true,\r\n        isLoadingTest: false,\r\n        isFetched: true,\r\n        assignedTests: action.tests,\r\n      };\r\n    case ASSIGNED_TEST_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        isLoadingTest: true,\r\n        fetchingError: false,\r\n      };\r\n    case SET_TEST_CREATED_FALSE:\r\n      return {\r\n        ...state,\r\n        testCreated: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport testReducer from \"./testReducer\";\r\nimport selectTestReducer from \"./selectReducer\";\r\nimport attemptedTestReducer from \"./attemptedTestReducer\";\r\nimport classesReducer from \"./classesReducer\";\r\nimport TeacherReducer from \"./teacherReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  tests: testReducer,\r\n  selectedTest: selectTestReducer,\r\n  userAttemptedTime: attemptedTestReducer,\r\n  classesData: classesReducer,\r\n  teacher: TeacherReducer,\r\n});\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducer from \"../reducers/index\";\r\nimport logger from \"redux-logger\";\r\n\r\n// const allEnhancers = compose(applyMiddleware(thunk, logger));\r\nconst allEnhancers = compose(applyMiddleware(thunk));\r\n\r\nconst store = createStore(reducer, allEnhancers);\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}